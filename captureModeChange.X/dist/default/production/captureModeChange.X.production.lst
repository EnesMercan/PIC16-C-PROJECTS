

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Dec 24 19:01:01 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  000E                     _TMR1	set	14
   176  0015                     _CCPR1	set	21
   177  000C                     _PIR1bits	set	12
   178  0017                     _CCP1CONbits	set	23
   179  0010                     _T1CONbits	set	16
   180  000B                     _INTCONbits	set	11
   181  0006                     _PORTB	set	6
   182  0060                     _TMR1IF	set	96
   183  003A                     _RC2	set	58
   184  0062                     _CCP1IF	set	98
   185  008C                     _PIE1bits	set	140
   186  0087                     _TRISC	set	135
   187  0086                     _TRISB	set	134
   188                           
   189                           	psect	cinit
   190  0011                     start_initialization:	
   191                           ; #config settings
   192                           
   193  0011                     __initialization:
   194                           
   195                           ; Clear objects allocated to COMMON
   196  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   197  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   198  0013  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   199  0014                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  0014                     __end_of__initialization:
   203  0014  0183               	clrf	3
   204  0015  120A  118A  2942   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMMON
   207  0079                     __pbssCOMMON:
   208  0079                     _time:
   209  0079                     	ds	1
   210  007A                     _counter:
   211  007A                     	ds	2
   212                           
   213                           	psect	cstackCOMMON
   214  0070                     __pcstackCOMMON:
   215  0070                     ?_setTimer:
   216  0070                     ?_setCaptureRising:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_runTimer:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ??_runTimer:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_setCaptureFalling:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ??_setCaptureFalling:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_stopTimer:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ??_stopTimer:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_myIntHandler:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?i1_setCaptureRising:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ??i1_setCaptureRising:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?___aldiv:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ___aldiv@divisor:	
   253                           ; 4 bytes @ 0x0
   254                           
   255                           
   256                           ; 4 bytes @ 0x0
   257  0070                     	ds	4
   258  0074                     ___aldiv@dividend:
   259                           
   260                           ; 4 bytes @ 0x4
   261  0074                     	ds	4
   262  0078                     ??___aldiv:
   263                           
   264                           ; 1 bytes @ 0x8
   265  0078                     	ds	1
   266                           
   267                           	psect	cstackBANK0
   268  0020                     __pcstackBANK0:
   269  0020                     ___aldiv@counter:
   270                           
   271                           ; 1 bytes @ 0x0
   272  0020                     	ds	1
   273  0021                     ___aldiv@sign:
   274                           
   275                           ; 1 bytes @ 0x1
   276  0021                     	ds	1
   277  0022                     ___aldiv@quotient:
   278                           
   279                           ; 4 bytes @ 0x2
   280  0022                     	ds	4
   281  0026                     ??_myIntHandler:
   282                           
   283                           ; 1 bytes @ 0x6
   284  0026                     	ds	11
   285  0031                     ??_setTimer:
   286  0031                     ??_setCaptureRising:	
   287                           ; 1 bytes @ 0x11
   288                           
   289  0031                     ??_main:	
   290                           ; 1 bytes @ 0x11
   291                           
   292                           
   293                           	psect	maintext
   294  0142                     __pmaintext:	
   295                           ; 1 bytes @ 0x11
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 31 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels required when called:    3
   321 ;; This function calls:
   322 ;;		_setCaptureRising
   323 ;;		_setTimer
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _main
   331  0142                     _main:
   332  0142                     l810:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   335                           
   336                           
   337                           ;main.c: 33:     TRISB = 0;
   338  0142  1683               	bsf	3,5	;RP0=1, select bank1
   339  0143  1303               	bcf	3,6	;RP1=0, select bank1
   340  0144  0186               	clrf	6	;volatile
   341                           
   342                           ;main.c: 34:     PORTB = 0;
   343  0145  1283               	bcf	3,5	;RP0=0, select bank0
   344  0146  1303               	bcf	3,6	;RP1=0, select bank0
   345  0147  0186               	clrf	6	;volatile
   346  0148                     l812:
   347                           
   348                           ;main.c: 35:     TRISC = 0x04;
   349  0148  3004               	movlw	4
   350  0149  1683               	bsf	3,5	;RP0=1, select bank1
   351  014A  1303               	bcf	3,6	;RP1=0, select bank1
   352  014B  0087               	movwf	7	;volatile
   353  014C                     l814:
   354                           
   355                           ;main.c: 37:     INTCONbits.GIE = 1;
   356  014C  178B               	bsf	11,7	;volatile
   357  014D                     l816:
   358                           
   359                           ;main.c: 38:     INTCONbits.PEIE = 1;
   360  014D  170B               	bsf	11,6	;volatile
   361  014E                     l818:
   362                           
   363                           ;main.c: 40:     setTimer();
   364  014E  120A  118A  217D  120A  118A  	fcall	_setTimer
   365  0153                     l820:
   366                           
   367                           ;main.c: 41:     setCaptureRising();
   368  0153  120A  118A  215C  120A  118A  	fcall	_setCaptureRising
   369  0158                     l45:	
   370                           ;main.c: 44:     while (1)
   371                           
   372  0158                     l46:	
   373                           ;main.c: 45:     {;main.c: 47:     }
   374                           
   375  0158  2958               	goto	l45
   376  0159  120A  118A  280E   	ljmp	start
   377  015C                     __end_of_main:
   378                           
   379                           	psect	text1
   380  017D                     __ptext1:	
   381 ;; *************** function _setTimer *****************
   382 ;; Defined at:
   383 ;;		line 100 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		None
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    2
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _setTimer
   413  017D                     _setTimer:
   414  017D                     l766:	
   415                           ;incstack = 0
   416                           ; Regs used in _setTimer: []
   417                           
   418                           
   419                           ;main.c: 103:     PIE1bits.TMR1IE = 1;
   420  017D  1683               	bsf	3,5	;RP0=1, select bank1
   421  017E  1303               	bcf	3,6	;RP1=0, select bank1
   422  017F  140C               	bsf	12,0	;volatile
   423                           
   424                           ;main.c: 106:     T1CONbits.TMR1CS = 0;
   425  0180  1283               	bcf	3,5	;RP0=0, select bank0
   426  0181  1303               	bcf	3,6	;RP1=0, select bank0
   427  0182  1090               	bcf	16,1	;volatile
   428                           
   429                           ;main.c: 109:     T1CONbits.T1CKPS0 = 0;
   430  0183  1210               	bcf	16,4	;volatile
   431                           
   432                           ;main.c: 110:     T1CONbits.T1CKPS1 = 0;
   433  0184  1290               	bcf	16,5	;volatile
   434  0185                     l62:
   435  0185  0008               	return
   436  0186                     __end_of_setTimer:
   437                           
   438                           	psect	text2
   439  015C                     __ptext2:	
   440 ;; *************** function _setCaptureRising *****************
   441 ;; Defined at:
   442 ;;		line 127 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		None
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels used:    1
   462 ;; Hardware stack levels required when called:    2
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _setCaptureRising
   472  015C                     _setCaptureRising:
   473  015C                     l768:	
   474                           ;incstack = 0
   475                           ; Regs used in _setCaptureRising: []
   476                           
   477                           
   478                           ;main.c: 130:     CCP1CONbits.CCP1M3 = 0;
   479  015C  1283               	bcf	3,5	;RP0=0, select bank0
   480  015D  1303               	bcf	3,6	;RP1=0, select bank0
   481  015E  1197               	bcf	23,3	;volatile
   482                           
   483                           ;main.c: 131:     CCP1CONbits.CCP1M2 = 1;
   484  015F  1517               	bsf	23,2	;volatile
   485                           
   486                           ;main.c: 132:     CCP1CONbits.CCP1M1 = 0;
   487  0160  1097               	bcf	23,1	;volatile
   488                           
   489                           ;main.c: 133:     CCP1CONbits.CCP1M0 = 1;
   490  0161  1417               	bsf	23,0	;volatile
   491                           
   492                           ;main.c: 135:     PIR1bits.CCP1IF = 0;
   493  0162  110C               	bcf	12,2	;volatile
   494                           
   495                           ;main.c: 137:     PIE1bits.CCP1IE = 1;
   496  0163  1683               	bsf	3,5	;RP0=1, select bank1
   497  0164  1303               	bcf	3,6	;RP1=0, select bank1
   498  0165  150C               	bsf	12,2	;volatile
   499  0166                     l71:
   500  0166  0008               	return
   501  0167                     __end_of_setCaptureRising:
   502                           
   503                           	psect	text3
   504  00B5                     __ptext3:	
   505 ;; *************** function _myIntHandler *****************
   506 ;; Defined at:
   507 ;;		line 53 in file "main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0
   523 ;;      Temps:          0      11       0       0       0
   524 ;;      Totals:         0      11       0       0       0
   525 ;;Total ram usage:       11 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:    1
   528 ;; This function calls:
   529 ;;		___aldiv
   530 ;;		_runTimer
   531 ;;		_setCaptureFalling
   532 ;;		_stopTimer
   533 ;;		i1_setCaptureRising
   534 ;; This function is called by:
   535 ;;		Interrupt level 1
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           
   540                           ;psect for function _myIntHandler
   541  00B5                     _myIntHandler:
   542  00B5                     i1l822:
   543                           
   544                           ;main.c: 55:     if (CCP1IF)
   545  00B5  1D0C               	btfss	12,2	;volatile
   546  00B6  28B8               	goto	u28_21
   547  00B7  28B9               	goto	u28_20
   548  00B8                     u28_21:
   549  00B8  292E               	goto	i1l848
   550  00B9                     u28_20:
   551  00B9                     i1l824:
   552                           
   553                           ;main.c: 56:     {;main.c: 57:         CCP1IF = 0;
   554  00B9  110C               	bcf	12,2	;volatile
   555                           
   556                           ;main.c: 59:         if (RC2)
   557  00BA  1D07               	btfss	7,2	;volatile
   558  00BB  28BD               	goto	u29_21
   559  00BC  28BE               	goto	u29_20
   560  00BD                     u29_21:
   561  00BD  28CC               	goto	i1l54
   562  00BE                     u29_20:
   563  00BE                     i1l826:
   564                           
   565                           ;main.c: 60:         {;main.c: 61:             runTimer();
   566  00BE  120A  118A  2186  120A  118A  	fcall	_runTimer
   567  00C3                     i1l828:
   568                           
   569                           ;main.c: 63:             PIE1bits.CCP1IE = 0;
   570  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   571  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   572  00C5  110C               	bcf	12,2	;volatile
   573                           
   574                           ;main.c: 64:             setCaptureFalling();
   575  00C6  120A  118A  2172  120A  118A  	fcall	_setCaptureFalling
   576                           
   577                           ;main.c: 66:         }
   578  00CB  292E               	goto	i1l848
   579  00CC                     i1l54:	
   580                           ;main.c: 68:         else if (RC2 == 0)
   581                           
   582  00CC  1907               	btfsc	7,2	;volatile
   583  00CD  28CF               	goto	u30_21
   584  00CE  28D0               	goto	u30_20
   585  00CF                     u30_21:
   586  00CF  292E               	goto	i1l848
   587  00D0                     u30_20:
   588  00D0                     i1l830:
   589                           
   590                           ;main.c: 69:         {;main.c: 70:             time = (65536 * counter + CCPR1) / 100000
      +                          0;
   591  00D0  3000               	movlw	0
   592  00D1  00F3               	movwf	___aldiv@divisor+3
   593  00D2  300F               	movlw	15
   594  00D3  00F2               	movwf	___aldiv@divisor+2
   595  00D4  3042               	movlw	66
   596  00D5  00F1               	movwf	___aldiv@divisor+1
   597  00D6  3040               	movlw	64
   598  00D7  00F0               	movwf	___aldiv@divisor
   599  00D8  0815               	movf	21,w	;volatile
   600  00D9  00A6               	movwf	??_myIntHandler
   601  00DA  0816               	movf	22,w	;volatile
   602  00DB  00A7               	movwf	??_myIntHandler+1
   603  00DC  01A8               	clrf	??_myIntHandler+2
   604  00DD  01A9               	clrf	??_myIntHandler+3
   605  00DE  087A               	movf	_counter,w
   606  00DF  00AA               	movwf	??_myIntHandler+4
   607  00E0  087B               	movf	_counter+1,w
   608  00E1  00AB               	movwf	??_myIntHandler+5
   609  00E2  01AC               	clrf	??_myIntHandler+6
   610  00E3  01AD               	clrf	??_myIntHandler+7
   611  00E4  3010               	movlw	16
   612  00E5                     u31_25:
   613  00E5  1003               	clrc
   614  00E6  0DAA               	rlf	??_myIntHandler+4,f
   615  00E7  0DAB               	rlf	??_myIntHandler+5,f
   616  00E8  0DAC               	rlf	??_myIntHandler+6,f
   617  00E9  0DAD               	rlf	??_myIntHandler+7,f
   618  00EA                     u31_20:
   619  00EA  3EFF               	addlw	-1
   620  00EB  1D03               	skipz
   621  00EC  28E5               	goto	u31_25
   622  00ED  082A               	movf	??_myIntHandler+4,w
   623  00EE  07A6               	addwf	??_myIntHandler,f
   624  00EF  082B               	movf	??_myIntHandler+5,w
   625  00F0  1803               	skipnc
   626  00F1  0F2B               	incfsz	??_myIntHandler+5,w
   627  00F2  28F4               	goto	u32_20
   628  00F3  28F5               	goto	u32_21
   629  00F4                     u32_20:
   630  00F4  07A7               	addwf	??_myIntHandler+1,f
   631  00F5                     u32_21:
   632  00F5  082C               	movf	??_myIntHandler+6,w
   633  00F6  1803               	skipnc
   634  00F7  0F2C               	incfsz	??_myIntHandler+6,w
   635  00F8  28FA               	goto	u32_22
   636  00F9  28FB               	goto	u32_23
   637  00FA                     u32_22:
   638  00FA  07A8               	addwf	??_myIntHandler+2,f
   639  00FB                     u32_23:
   640  00FB  082D               	movf	??_myIntHandler+7,w
   641  00FC  1803               	skipnc
   642  00FD  0A2D               	incf	??_myIntHandler+7,w
   643  00FE  07A9               	addwf	??_myIntHandler+3,f
   644  00FF  0829               	movf	??_myIntHandler+3,w
   645  0100  00F7               	movwf	___aldiv@dividend+3
   646  0101  0828               	movf	??_myIntHandler+2,w
   647  0102  00F6               	movwf	___aldiv@dividend+2
   648  0103  0827               	movf	??_myIntHandler+1,w
   649  0104  00F5               	movwf	___aldiv@dividend+1
   650  0105  0826               	movf	??_myIntHandler,w
   651  0106  00F4               	movwf	___aldiv@dividend
   652  0107  120A  118A  2018  120A  118A  	fcall	___aldiv
   653  010C  0870               	movf	?___aldiv,w
   654  010D  1283               	bcf	3,5	;RP0=0, select bank0
   655  010E  1303               	bcf	3,6	;RP1=0, select bank0
   656  010F  00AE               	movwf	??_myIntHandler+8
   657  0110  082E               	movf	??_myIntHandler+8,w
   658  0111  00F9               	movwf	_time
   659  0112                     i1l832:
   660                           
   661                           ;main.c: 72:             if (time >= 255)
   662  0112  0A79               	incf	_time,w
   663  0113  1D03               	btfss	3,2
   664  0114  2916               	goto	u33_21
   665  0115  2917               	goto	u33_20
   666  0116                     u33_21:
   667  0116  291A               	goto	i1l836
   668  0117                     u33_20:
   669  0117                     i1l834:
   670                           
   671                           ;main.c: 73:             {;main.c: 74:                 time = 0;
   672  0117  01F9               	clrf	_time
   673                           
   674                           ;main.c: 75:                 counter = 0;
   675  0118  01FA               	clrf	_counter
   676  0119  01FB               	clrf	_counter+1
   677  011A                     i1l836:
   678                           
   679                           ;main.c: 78:             stopTimer();
   680  011A  120A  118A  218D  120A  118A  	fcall	_stopTimer
   681  011F                     i1l838:
   682                           
   683                           ;main.c: 79:             PORTB = time;
   684  011F  0879               	movf	_time,w
   685  0120  1283               	bcf	3,5	;RP0=0, select bank0
   686  0121  1303               	bcf	3,6	;RP1=0, select bank0
   687  0122  0086               	movwf	6	;volatile
   688  0123                     i1l840:
   689                           
   690                           ;main.c: 80:             PIE1bits.CCP1IE = 0;
   691  0123  1683               	bsf	3,5	;RP0=1, select bank1
   692  0124  1303               	bcf	3,6	;RP1=0, select bank1
   693  0125  110C               	bcf	12,2	;volatile
   694  0126                     i1l842:
   695                           
   696                           ;main.c: 81:             setCaptureRising();
   697  0126  120A  118A  2167  120A  118A  	fcall	i1_setCaptureRising
   698  012B                     i1l844:
   699                           
   700                           ;main.c: 84:             counter = 0;
   701  012B  01FA               	clrf	_counter
   702  012C  01FB               	clrf	_counter+1
   703  012D                     i1l846:
   704                           
   705                           ;main.c: 85:             time = 0;
   706  012D  01F9               	clrf	_time
   707  012E                     i1l848:
   708                           
   709                           ;main.c: 91:     if (TMR1IF)
   710  012E  1283               	bcf	3,5	;RP0=0, select bank0
   711  012F  1303               	bcf	3,6	;RP1=0, select bank0
   712  0130  1C0C               	btfss	12,0	;volatile
   713  0131  2933               	goto	u34_21
   714  0132  2934               	goto	u34_20
   715  0133                     u34_21:
   716  0133  293B               	goto	i1l59
   717  0134                     u34_20:
   718  0134                     i1l850:
   719                           
   720                           ;main.c: 92:     {;main.c: 93:         counter++;
   721  0134  3001               	movlw	1
   722  0135  07FA               	addwf	_counter,f
   723  0136  1803               	skipnc
   724  0137  0AFB               	incf	_counter+1,f
   725  0138  3000               	movlw	0
   726  0139  07FB               	addwf	_counter+1,f
   727  013A                     i1l852:
   728                           
   729                           ;main.c: 94:         TMR1IF = 0;
   730  013A  100C               	bcf	12,0	;volatile
   731  013B                     i1l59:
   732  013B  0830               	movf	??_myIntHandler+10,w
   733  013C  008A               	movwf	10
   734  013D  0E2F               	swapf	(??_myIntHandler+9)^0,w
   735  013E  0083               	movwf	3
   736  013F  0EFE               	swapf	btemp,f
   737  0140  0E7E               	swapf	btemp,w
   738  0141  0009               	retfie
   739  0142                     __end_of_myIntHandler:
   740                           
   741                           	psect	intentry
   742  0004                     __pintentry:	
   743                           ;incstack = 0
   744                           ; Regs used in _myIntHandler: [wreg+status,2+status,0+pclath+cstack]
   745                           
   746  0004                     interrupt_function:
   747  007E                     saved_w	set	btemp
   748  0004  00FE               	movwf	btemp
   749  0005  0E03               	swapf	3,w
   750  0006  1283               	bcf	3,5	;RP0=0, select bank0
   751  0007  1303               	bcf	3,6	;RP1=0, select bank0
   752  0008  00AF               	movwf	??_myIntHandler+9
   753  0009  080A               	movf	10,w
   754  000A  00B0               	movwf	??_myIntHandler+10
   755  000B  120A  118A  28B5   	ljmp	_myIntHandler
   756                           
   757                           	psect	text4
   758  0167                     __ptext4:	
   759 ;; *************** function i1_setCaptureRising *****************
   760 ;; Defined at:
   761 ;;		line 127 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		None
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_myIntHandler
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function i1_setCaptureRising
   790  0167                     i1_setCaptureRising:
   791  0167                     i1l720:	
   792                           ;incstack = 0
   793                           ; Regs used in i1_setCaptureRising: []
   794                           
   795                           
   796                           ;main.c: 130:     CCP1CONbits.CCP1M3 = 0;
   797  0167  1283               	bcf	3,5	;RP0=0, select bank0
   798  0168  1303               	bcf	3,6	;RP1=0, select bank0
   799  0169  1197               	bcf	23,3	;volatile
   800                           
   801                           ;main.c: 131:     CCP1CONbits.CCP1M2 = 1;
   802  016A  1517               	bsf	23,2	;volatile
   803                           
   804                           ;main.c: 132:     CCP1CONbits.CCP1M1 = 0;
   805  016B  1097               	bcf	23,1	;volatile
   806                           
   807                           ;main.c: 133:     CCP1CONbits.CCP1M0 = 1;
   808  016C  1417               	bsf	23,0	;volatile
   809                           
   810                           ;main.c: 135:     PIR1bits.CCP1IF = 0;
   811  016D  110C               	bcf	12,2	;volatile
   812                           
   813                           ;main.c: 137:     PIE1bits.CCP1IE = 1;
   814  016E  1683               	bsf	3,5	;RP0=1, select bank1
   815  016F  1303               	bcf	3,6	;RP1=0, select bank1
   816  0170  150C               	bsf	12,2	;volatile
   817  0171                     i1l71:
   818  0171  0008               	return
   819  0172                     __end_ofi1_setCaptureRising:
   820                           
   821                           	psect	text5
   822  018D                     __ptext5:	
   823 ;; *************** function _stopTimer *****************
   824 ;; Defined at:
   825 ;;		line 121 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		status,2
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_myIntHandler
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _stopTimer
   854  018D                     _stopTimer:
   855  018D                     i1l676:	
   856                           ;incstack = 0
   857                           ; Regs used in _stopTimer: [status,2]
   858                           
   859                           
   860                           ;main.c: 123:     T1CONbits.TMR1ON = 0;
   861  018D  1283               	bcf	3,5	;RP0=0, select bank0
   862  018E  1303               	bcf	3,6	;RP1=0, select bank0
   863  018F  1010               	bcf	16,0	;volatile
   864  0190                     i1l678:
   865                           
   866                           ;main.c: 124:     TMR1 = 0;
   867  0190  018E               	clrf	14	;volatile
   868  0191  018F               	clrf	15	;volatile
   869  0192                     i1l68:
   870  0192  0008               	return
   871  0193                     __end_of_stopTimer:
   872                           
   873                           	psect	text6
   874  0172                     __ptext6:	
   875 ;; *************** function _setCaptureFalling *****************
   876 ;; Defined at:
   877 ;;		line 141 in file "main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		None
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_myIntHandler
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _setCaptureFalling
   906  0172                     _setCaptureFalling:
   907  0172                     i1l674:	
   908                           ;incstack = 0
   909                           ; Regs used in _setCaptureFalling: []
   910                           
   911                           
   912                           ;main.c: 144:     CCP1CONbits.CCP1M3 = 0;
   913  0172  1283               	bcf	3,5	;RP0=0, select bank0
   914  0173  1303               	bcf	3,6	;RP1=0, select bank0
   915  0174  1197               	bcf	23,3	;volatile
   916                           
   917                           ;main.c: 145:     CCP1CONbits.CCP1M2 = 1;
   918  0175  1517               	bsf	23,2	;volatile
   919                           
   920                           ;main.c: 146:     CCP1CONbits.CCP1M1 = 0;
   921  0176  1097               	bcf	23,1	;volatile
   922                           
   923                           ;main.c: 147:     CCP1CONbits.CCP1M0 = 0;
   924  0177  1017               	bcf	23,0	;volatile
   925                           
   926                           ;main.c: 149:     PIR1bits.CCP1IF = 0;
   927  0178  110C               	bcf	12,2	;volatile
   928                           
   929                           ;main.c: 151:     PIE1bits.CCP1IE = 1;
   930  0179  1683               	bsf	3,5	;RP0=1, select bank1
   931  017A  1303               	bcf	3,6	;RP1=0, select bank1
   932  017B  150C               	bsf	12,2	;volatile
   933  017C                     i1l74:
   934  017C  0008               	return
   935  017D                     __end_of_setCaptureFalling:
   936                           
   937                           	psect	text7
   938  0186                     __ptext7:	
   939 ;; *************** function _runTimer *****************
   940 ;; Defined at:
   941 ;;		line 114 in file "main.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		status,2
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_myIntHandler
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _runTimer
   970  0186                     _runTimer:
   971  0186                     i1l670:	
   972                           ;incstack = 0
   973                           ; Regs used in _runTimer: [status,2]
   974                           
   975                           
   976                           ;main.c: 116:     TMR1IF = 0;
   977  0186  1283               	bcf	3,5	;RP0=0, select bank0
   978  0187  1303               	bcf	3,6	;RP1=0, select bank0
   979  0188  100C               	bcf	12,0	;volatile
   980                           
   981                           ;main.c: 117:     T1CONbits.TMR1ON = 1;
   982  0189  1410               	bsf	16,0	;volatile
   983  018A                     i1l672:
   984                           
   985                           ;main.c: 118:     TMR1 = 0;
   986  018A  018E               	clrf	14	;volatile
   987  018B  018F               	clrf	15	;volatile
   988  018C                     i1l65:
   989  018C  0008               	return
   990  018D                     __end_of_runTimer:
   991                           
   992                           	psect	text8
   993  0018                     __ptext8:	
   994 ;; *************** function ___aldiv *****************
   995 ;; Defined at:
   996 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c90/common/aldiv.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  divisor         4    0[COMMON] long 
   999 ;;  dividend        4    4[COMMON] long 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  quotient        4    2[BANK0 ] long 
  1002 ;;  sign            1    1[BANK0 ] unsigned char 
  1003 ;;  counter         1    0[BANK0 ] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  4    0[COMMON] long 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         8       0       0       0       0
  1014 ;;      Locals:         0       6       0       0       0
  1015 ;;      Temps:          1       0       0       0       0
  1016 ;;      Totals:         9       6       0       0       0
  1017 ;;Total ram usage:       15 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_myIntHandler
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function ___aldiv
  1028  0018                     ___aldiv:
  1029  0018                     i1l770:	
  1030                           ;incstack = 0
  1031                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1032                           
  1033  0018  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0019  1303               	bcf	3,6	;RP1=0, select bank0
  1035  001A  01A1               	clrf	___aldiv@sign
  1036  001B                     i1l772:
  1037  001B  1FF3               	btfss	___aldiv@divisor+3,7
  1038  001C  281E               	goto	u18_21
  1039  001D  281F               	goto	u18_20
  1040  001E                     u18_21:
  1041  001E  282C               	goto	i1l225
  1042  001F                     u18_20:
  1043  001F                     i1l774:
  1044  001F  09F0               	comf	___aldiv@divisor,f
  1045  0020  09F1               	comf	___aldiv@divisor+1,f
  1046  0021  09F2               	comf	___aldiv@divisor+2,f
  1047  0022  09F3               	comf	___aldiv@divisor+3,f
  1048  0023  0AF0               	incf	___aldiv@divisor,f
  1049  0024  1903               	skipnz
  1050  0025  0AF1               	incf	___aldiv@divisor+1,f
  1051  0026  1903               	skipnz
  1052  0027  0AF2               	incf	___aldiv@divisor+2,f
  1053  0028  1903               	skipnz
  1054  0029  0AF3               	incf	___aldiv@divisor+3,f
  1055  002A  01A1               	clrf	___aldiv@sign
  1056  002B  0AA1               	incf	___aldiv@sign,f
  1057  002C                     i1l225:
  1058  002C  1FF7               	btfss	___aldiv@dividend+3,7
  1059  002D  282F               	goto	u19_21
  1060  002E  2830               	goto	u19_20
  1061  002F                     u19_21:
  1062  002F  283F               	goto	i1l780
  1063  0030                     u19_20:
  1064  0030                     i1l776:
  1065  0030  09F4               	comf	___aldiv@dividend,f
  1066  0031  09F5               	comf	___aldiv@dividend+1,f
  1067  0032  09F6               	comf	___aldiv@dividend+2,f
  1068  0033  09F7               	comf	___aldiv@dividend+3,f
  1069  0034  0AF4               	incf	___aldiv@dividend,f
  1070  0035  1903               	skipnz
  1071  0036  0AF5               	incf	___aldiv@dividend+1,f
  1072  0037  1903               	skipnz
  1073  0038  0AF6               	incf	___aldiv@dividend+2,f
  1074  0039  1903               	skipnz
  1075  003A  0AF7               	incf	___aldiv@dividend+3,f
  1076  003B                     i1l778:
  1077  003B  3001               	movlw	1
  1078  003C  00F8               	movwf	??___aldiv
  1079  003D  0878               	movf	??___aldiv,w
  1080  003E  06A1               	xorwf	___aldiv@sign,f
  1081  003F                     i1l780:
  1082  003F  3000               	movlw	0
  1083  0040  00A5               	movwf	___aldiv@quotient+3
  1084  0041  3000               	movlw	0
  1085  0042  00A4               	movwf	___aldiv@quotient+2
  1086  0043  3000               	movlw	0
  1087  0044  00A3               	movwf	___aldiv@quotient+1
  1088  0045  3000               	movlw	0
  1089  0046  00A2               	movwf	___aldiv@quotient
  1090  0047                     i1l782:
  1091  0047  0873               	movf	___aldiv@divisor+3,w
  1092  0048  0472               	iorwf	___aldiv@divisor+2,w
  1093  0049  0471               	iorwf	___aldiv@divisor+1,w
  1094  004A  0470               	iorwf	___aldiv@divisor,w
  1095  004B  1903               	skipnz
  1096  004C  284E               	goto	u20_21
  1097  004D  284F               	goto	u20_20
  1098  004E                     u20_21:
  1099  004E  289C               	goto	i1l802
  1100  004F                     u20_20:
  1101  004F                     i1l784:
  1102  004F  01A0               	clrf	___aldiv@counter
  1103  0050  0AA0               	incf	___aldiv@counter,f
  1104  0051  285F               	goto	i1l788
  1105  0052                     i1l786:
  1106  0052  3001               	movlw	1
  1107  0053  00F8               	movwf	??___aldiv
  1108  0054                     u21_25:
  1109  0054  1003               	clrc
  1110  0055  0DF0               	rlf	___aldiv@divisor,f
  1111  0056  0DF1               	rlf	___aldiv@divisor+1,f
  1112  0057  0DF2               	rlf	___aldiv@divisor+2,f
  1113  0058  0DF3               	rlf	___aldiv@divisor+3,f
  1114  0059  0BF8               	decfsz	??___aldiv,f
  1115  005A  2854               	goto	u21_25
  1116  005B  3001               	movlw	1
  1117  005C  00F8               	movwf	??___aldiv
  1118  005D  0878               	movf	??___aldiv,w
  1119  005E  07A0               	addwf	___aldiv@counter,f
  1120  005F                     i1l788:
  1121  005F  1FF3               	btfss	___aldiv@divisor+3,7
  1122  0060  2862               	goto	u22_21
  1123  0061  2863               	goto	u22_20
  1124  0062                     u22_21:
  1125  0062  2852               	goto	i1l786
  1126  0063                     u22_20:
  1127  0063                     i1l790:
  1128  0063  3001               	movlw	1
  1129  0064  00F8               	movwf	??___aldiv
  1130  0065                     u23_25:
  1131  0065  1003               	clrc
  1132  0066  0DA2               	rlf	___aldiv@quotient,f
  1133  0067  0DA3               	rlf	___aldiv@quotient+1,f
  1134  0068  0DA4               	rlf	___aldiv@quotient+2,f
  1135  0069  0DA5               	rlf	___aldiv@quotient+3,f
  1136  006A  0BF8               	decfsz	??___aldiv,f
  1137  006B  2865               	goto	u23_25
  1138  006C                     i1l792:
  1139  006C  0873               	movf	___aldiv@divisor+3,w
  1140  006D  0277               	subwf	___aldiv@dividend+3,w
  1141  006E  1D03               	skipz
  1142  006F  287A               	goto	u24_25
  1143  0070  0872               	movf	___aldiv@divisor+2,w
  1144  0071  0276               	subwf	___aldiv@dividend+2,w
  1145  0072  1D03               	skipz
  1146  0073  287A               	goto	u24_25
  1147  0074  0871               	movf	___aldiv@divisor+1,w
  1148  0075  0275               	subwf	___aldiv@dividend+1,w
  1149  0076  1D03               	skipz
  1150  0077  287A               	goto	u24_25
  1151  0078  0870               	movf	___aldiv@divisor,w
  1152  0079  0274               	subwf	___aldiv@dividend,w
  1153  007A                     u24_25:
  1154  007A  1C03               	skipc
  1155  007B  287D               	goto	u24_21
  1156  007C  287E               	goto	u24_20
  1157  007D                     u24_21:
  1158  007D  288D               	goto	i1l798
  1159  007E                     u24_20:
  1160  007E                     i1l794:
  1161  007E  0870               	movf	___aldiv@divisor,w
  1162  007F  02F4               	subwf	___aldiv@dividend,f
  1163  0080  0871               	movf	___aldiv@divisor+1,w
  1164  0081  1C03               	skipc
  1165  0082  0F71               	incfsz	___aldiv@divisor+1,w
  1166  0083  02F5               	subwf	___aldiv@dividend+1,f
  1167  0084  0872               	movf	___aldiv@divisor+2,w
  1168  0085  1C03               	skipc
  1169  0086  0F72               	incfsz	___aldiv@divisor+2,w
  1170  0087  02F6               	subwf	___aldiv@dividend+2,f
  1171  0088  0873               	movf	___aldiv@divisor+3,w
  1172  0089  1C03               	skipc
  1173  008A  0F73               	incfsz	___aldiv@divisor+3,w
  1174  008B  02F7               	subwf	___aldiv@dividend+3,f
  1175  008C                     i1l796:
  1176  008C  1422               	bsf	___aldiv@quotient,0
  1177  008D                     i1l798:
  1178  008D  3001               	movlw	1
  1179  008E                     u25_25:
  1180  008E  1003               	clrc
  1181  008F  0CF3               	rrf	___aldiv@divisor+3,f
  1182  0090  0CF2               	rrf	___aldiv@divisor+2,f
  1183  0091  0CF1               	rrf	___aldiv@divisor+1,f
  1184  0092  0CF0               	rrf	___aldiv@divisor,f
  1185  0093  3EFF               	addlw	-1
  1186  0094  1D03               	skipz
  1187  0095  288E               	goto	u25_25
  1188  0096                     i1l800:
  1189  0096  3001               	movlw	1
  1190  0097  02A0               	subwf	___aldiv@counter,f
  1191  0098  1D03               	btfss	3,2
  1192  0099  289B               	goto	u26_21
  1193  009A  289C               	goto	u26_20
  1194  009B                     u26_21:
  1195  009B  2863               	goto	i1l790
  1196  009C                     u26_20:
  1197  009C                     i1l802:
  1198  009C  0821               	movf	___aldiv@sign,w
  1199  009D  1903               	btfsc	3,2
  1200  009E  28A0               	goto	u27_21
  1201  009F  28A1               	goto	u27_20
  1202  00A0                     u27_21:
  1203  00A0  28AC               	goto	i1l806
  1204  00A1                     u27_20:
  1205  00A1                     i1l804:
  1206  00A1  09A2               	comf	___aldiv@quotient,f
  1207  00A2  09A3               	comf	___aldiv@quotient+1,f
  1208  00A3  09A4               	comf	___aldiv@quotient+2,f
  1209  00A4  09A5               	comf	___aldiv@quotient+3,f
  1210  00A5  0AA2               	incf	___aldiv@quotient,f
  1211  00A6  1903               	skipnz
  1212  00A7  0AA3               	incf	___aldiv@quotient+1,f
  1213  00A8  1903               	skipnz
  1214  00A9  0AA4               	incf	___aldiv@quotient+2,f
  1215  00AA  1903               	skipnz
  1216  00AB  0AA5               	incf	___aldiv@quotient+3,f
  1217  00AC                     i1l806:
  1218  00AC  0825               	movf	___aldiv@quotient+3,w
  1219  00AD  00F3               	movwf	?___aldiv+3
  1220  00AE  0824               	movf	___aldiv@quotient+2,w
  1221  00AF  00F2               	movwf	?___aldiv+2
  1222  00B0  0823               	movf	___aldiv@quotient+1,w
  1223  00B1  00F1               	movwf	?___aldiv+1
  1224  00B2  0822               	movf	___aldiv@quotient,w
  1225  00B3  00F0               	movwf	?___aldiv
  1226  00B4                     i1l235:
  1227  00B4  0008               	return
  1228  00B5                     __end_of___aldiv:
  1229  007E                     btemp	set	126	;btemp
  1230  007E                     wtemp0	set	126
  1231                           
  1232                           	psect	config
  1233                           
  1234                           ;Config register CONFIG @ 0x2007
  1235                           ;	Oscillator Selection bits
  1236                           ;	FOSC = XT, XT oscillator
  1237                           ;	Watchdog Timer Enable bit
  1238                           ;	WDTE = OFF, WDT disabled
  1239                           ;	Power-up Timer Enable bit
  1240                           ;	PWRTE = OFF, PWRT disabled
  1241                           ;	Brown-out Reset Enable bit
  1242                           ;	BOREN = ON, BOR enabled
  1243                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1244                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1245                           ;	Data EEPROM Memory Code Protection bit
  1246                           ;	CPD = OFF, Data EEPROM code protection off
  1247                           ;	Flash Program Memory Write Enable bits
  1248                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1249                           ;	In-Circuit Debugger Mode bit
  1250                           ;	DEBUG = 0x1, unprogrammed default
  1251                           ;	Flash Program Memory Code Protection bit
  1252                           ;	CP = OFF, Code protection off
  1253  2007                     	org	8199
  1254  2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     17      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIntHandler in COMMON

    _myIntHandler->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIntHandler in BANK0

    _myIntHandler->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIntHandler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIntHandler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIntHandler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                   _setCaptureRising
                           _setTimer
 ---------------------------------------------------------------------------------
 (1) _setTimer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setCaptureRising                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIntHandler                                        11    11      0     452
                                              6 BANK0     11    11      0
                            ___aldiv
                           _runTimer
                  _setCaptureFalling
                          _stopTimer
                 i1_setCaptureRising
 ---------------------------------------------------------------------------------
 (3) i1_setCaptureRising                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _stopTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setCaptureFalling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _runTimer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setCaptureRising
   _setTimer

 _myIntHandler (ROOT)
   ___aldiv
   _runTimer
   _setCaptureFalling
   _stopTimer
   i1_setCaptureRising

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Dec 24 19:01:01 2020

 __size_of_setCaptureFalling 000B                           l45 0158                           l62 0185  
                         l46 0158                           l71 0166                          l810 0142  
                        l820 0153                          l812 0148                          l814 014C  
                        l816 014D                          l818 014E                          l766 017D  
                        l768 015C                          _RC2 003A                         i1l54 00CC  
                       i1l71 0171                         i1l65 018C                         i1l74 017C  
                       i1l59 013B                         i1l68 0192                         _TMR1 000E  
                       _main 0142                         _time 0079                         btemp 007E  
                       start 000E              __end_of___aldiv 00B5                        ?_main 0070  
                      _CCPR1 0015                        i1l225 002C                        i1l235 00B4  
                      i1l800 0096                        i1l720 0167                        i1l802 009C  
                      i1l804 00A1                        i1l806 00AC                        i1l670 0186  
                      i1l830 00D0                        i1l822 00B5                        i1l672 018A  
                      i1l840 0123                        i1l832 0112                        i1l824 00B9  
                      i1l770 0018                        i1l674 0172                        i1l850 0134  
                      i1l842 0126                        i1l834 0117                        i1l826 00BE  
                      i1l780 003F                        i1l772 001B                        i1l676 018D  
                      i1l852 013A                        i1l844 012B                        i1l836 011A  
                      i1l828 00C3                        i1l790 0063                        i1l782 0047  
                      i1l774 001F                        i1l678 0190                        i1l846 012D  
                      i1l838 011F                        i1l792 006C                        i1l784 004F  
                      i1l776 0030                        i1l848 012E                        i1l794 007E  
                      i1l786 0052                        i1l778 003B                        i1l796 008C  
                      i1l788 005F                        i1l798 008D                        u20_20 004F  
                      u20_21 004E                        u21_25 0054                        u22_20 0063  
                      u30_20 00D0                        u22_21 0062                        u30_21 00CF  
                      u31_20 00EA                        u23_25 0065                        u31_25 00E5  
                      u24_20 007E                        u32_20 00F4                        u24_21 007D  
                      u32_21 00F5                        u32_22 00FA                        u32_23 00FB  
                      u24_25 007A                        u33_20 0117                        u33_21 0116  
                      u25_25 008E                        u26_20 009C                        u18_20 001F  
                      u34_20 0134                        u26_21 009B                        u18_21 001E  
                      u34_21 0133                        u27_20 00A1                        u19_20 0030  
                      u27_21 00A0                        u19_21 002F                        _PORTB 0006  
                      u28_20 00B9                        u28_21 00B8                        u29_20 00BE  
                      u29_21 00BD                        _TRISB 0086                        _TRISC 0087  
         i1_setCaptureRising 0167                        pclath 000A          ?i1_setCaptureRising 0070  
                      status 0003                        wtemp0 007E              __initialization 0011  
               __end_of_main 015C         ??i1_setCaptureRising 0070     __end_of_setCaptureRising 0167  
                     ??_main 0031                       _CCP1IF 0062                       _TMR1IF 0060  
                  ??___aldiv 0078                ?_myIntHandler 0070             __end_of_setTimer 0186  
                     saved_w 007E             __end_of_runTimer 018D      __end_of__initialization 0014  
             __pcstackCOMMON 0070               ??_myIntHandler 0026                   __pmaintext 0142  
                 __pintentry 0004           __size_of_stopTimer 0006                    ?_setTimer 0070  
                    ___aldiv 0018                    ?_runTimer 0070                      __ptext1 017D  
                    __ptext2 015C                      __ptext3 00B5                      __ptext4 0167  
                    __ptext5 018D                      __ptext6 0172                      __ptext7 0186  
                    __ptext8 0018            ?_setCaptureRising 0070                    _T1CONbits 0010  
                    _counter 007A             ___aldiv@dividend 0074           ??_setCaptureRising 0031  
       end_of_initialization 0014         __end_of_myIntHandler 0142                   ??_setTimer 0031  
           ___aldiv@quotient 0022                   ??_runTimer 0070            __end_of_stopTimer 0193  
__size_ofi1_setCaptureRising 000B                  _CCP1CONbits 0017          start_initialization 0011  
                __pbssCOMMON 0079                    ___latbits 0002                __pcstackBANK0 0020  
      __size_of_myIntHandler 008D                     ?___aldiv 0070            __size_of_setTimer 0009  
               _myIntHandler 00B5            __size_of_runTimer 0007              ___aldiv@divisor 0070  
          interrupt_function 0004              ___aldiv@counter 0020    __size_of_setCaptureRising 000B  
                   _PIE1bits 008C                     _PIR1bits 000C                    _stopTimer 018D  
 __end_ofi1_setCaptureRising 0172             __size_of___aldiv 009D            _setCaptureFalling 0172  
         ?_setCaptureFalling 0070                   ?_stopTimer 0070          ??_setCaptureFalling 0070  
              __size_of_main 001A                     _setTimer 017D                     _runTimer 0186  
  __end_of_setCaptureFalling 017D                   _INTCONbits 000B                     intlevel1 0000  
           _setCaptureRising 015C                  ??_stopTimer 0070                 ___aldiv@sign 0021  
