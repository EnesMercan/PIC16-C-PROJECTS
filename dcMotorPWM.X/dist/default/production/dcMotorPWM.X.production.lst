

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Dec 24 22:44:28 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0008                     _PORTD	set	8
   167  0015                     _CCPR1L	set	21
   168  0058                     _RBIF	set	88
   169  0030                     _RB0	set	48
   170  0031                     _RB1	set	49
   171  0032                     _RB2	set	50
   172  0092                     _TMR2ON	set	146
   173  0090                     _T2CKPS0	set	144
   174  0091                     _T2CKPS1	set	145
   175  00BA                     _CCP1M2	set	186
   176  00BB                     _CCP1M3	set	187
   177  005B                     _RBIE	set	91
   178  005F                     _GIE	set	95
   179  0087                     _TRISC	set	135
   180  0088                     _TRISD	set	136
   181  0086                     _TRISB	set	134
   182  0092                     _PR2	set	146
   183                           
   184                           	psect	cinit
   185  000F                     start_initialization:	
   186                           ; #config settings
   187                           
   188  000F                     __initialization:
   189  000F                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192  000F                     __end_of__initialization:
   193  000F  0183               	clrf	3
   194  0010  120A  118A  2843   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197  0070                     __pcstackCOMMON:
   198  0070                     ?_main:
   199  0070                     ?_myIntHandler:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ??_myIntHandler:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207  0070                     	ds	3
   208  0073                     ??_main:
   209                           
   210                           	psect	maintext
   211  0043                     __pmaintext:	
   212                           ; 1 bytes @ 0x3
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 14 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels required when called:    1
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _main
   247  0043                     _main:
   248  0043                     l645:	
   249                           ;incstack = 0
   250                           ; Regs used in _main: [wreg+status,2]
   251                           
   252                           
   253                           ;main.c: 16:     GIE = 1;
   254  0043  178B               	bsf	11,7	;volatile
   255                           
   256                           ;main.c: 17:     RBIE = 1;
   257  0044  158B               	bsf	11,3	;volatile
   258                           
   259                           ;main.c: 20:     CCP1M3 = 1;
   260  0045  1283               	bcf	3,5	;RP0=0, select bank0
   261  0046  1303               	bcf	3,6	;RP1=0, select bank0
   262  0047  1597               	bsf	23,3	;volatile
   263                           
   264                           ;main.c: 21:     CCP1M2 = 1;
   265  0048  1517               	bsf	23,2	;volatile
   266  0049                     l647:
   267                           
   268                           ;main.c: 24:     PR2 = 249;
   269  0049  30F9               	movlw	249
   270  004A  1683               	bsf	3,5	;RP0=1, select bank1
   271  004B  1303               	bcf	3,6	;RP1=0, select bank1
   272  004C  0092               	movwf	18	;volatile
   273                           
   274                           ;main.c: 25:     CCPR1L = 125;
   275  004D  307D               	movlw	125
   276  004E  1283               	bcf	3,5	;RP0=0, select bank0
   277  004F  1303               	bcf	3,6	;RP1=0, select bank0
   278  0050  0095               	movwf	21	;volatile
   279  0051                     l649:
   280                           
   281                           ;main.c: 26:     T2CKPS1 = 0;
   282  0051  1092               	bcf	18,1	;volatile
   283  0052                     l651:
   284                           
   285                           ;main.c: 27:     T2CKPS0 = 1;
   286  0052  1412               	bsf	18,0	;volatile
   287  0053                     l653:
   288                           
   289                           ;main.c: 29:     TMR2ON = 1;
   290  0053  1512               	bsf	18,2	;volatile
   291                           
   292                           ;main.c: 31:     TRISB = 0xFF;
   293  0054  30FF               	movlw	255
   294  0055  1683               	bsf	3,5	;RP0=1, select bank1
   295  0056  1303               	bcf	3,6	;RP1=0, select bank1
   296  0057  0086               	movwf	6	;volatile
   297  0058                     l655:
   298                           
   299                           ;main.c: 32:     TRISD = 0;
   300  0058  0188               	clrf	8	;volatile
   301  0059                     l657:
   302                           
   303                           ;main.c: 33:     TRISC = 0;
   304  0059  0187               	clrf	7	;volatile
   305  005A                     l39:	
   306                           ;main.c: 35:     while (1)
   307                           
   308  005A                     l40:	
   309                           ;main.c: 36:     {;main.c: 38:     }
   310                           
   311  005A  285A               	goto	l39
   312  005B  120A  118A  280C   	ljmp	start
   313  005E                     __end_of_main:
   314                           
   315                           	psect	text1
   316  0013                     __ptext1:	
   317 ;; *************** function _myIntHandler *****************
   318 ;; Defined at:
   319 ;;		line 43 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          3       0       0       0       0
   336 ;;      Totals:         3       0       0       0       0
   337 ;;Total ram usage:        3 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		Interrupt level 1
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           
   347                           ;psect for function _myIntHandler
   348  0013                     _myIntHandler:
   349  0013                     i1l659:
   350                           
   351                           ;main.c: 45:     if (RB2 == 0)
   352  0013  1283               	bcf	3,5	;RP0=0, select bank0
   353  0014  1303               	bcf	3,6	;RP1=0, select bank0
   354  0015  1906               	btfsc	6,2	;volatile
   355  0016  2818               	goto	u1_21
   356  0017  2819               	goto	u1_20
   357  0018                     u1_21:
   358  0018  281C               	goto	i1l663
   359  0019                     u1_20:
   360  0019                     i1l661:
   361                           
   362                           ;main.c: 46:             PORTD = 5;
   363  0019  3005               	movlw	5
   364  001A  0088               	movwf	8	;volatile
   365  001B  281E               	goto	i1l665
   366  001C                     i1l663:
   367                           
   368                           ;main.c: 48:             PORTD = 10;
   369  001C  300A               	movlw	10
   370  001D  0088               	movwf	8	;volatile
   371  001E                     i1l665:
   372                           
   373                           ;main.c: 50:         if (RB1)
   374  001E  1C86               	btfss	6,1	;volatile
   375  001F  2821               	goto	u2_21
   376  0020  2822               	goto	u2_20
   377  0021                     u2_21:
   378  0021  282E               	goto	i1l673
   379  0022                     u2_20:
   380  0022                     i1l667:
   381                           
   382                           ;main.c: 51:         {;main.c: 52:             if (CCPR1L > 246)
   383  0022  30F7               	movlw	247
   384  0023  0215               	subwf	21,w	;volatile
   385  0024  1C03               	skipc
   386  0025  2827               	goto	u3_21
   387  0026  2828               	goto	u3_20
   388  0027                     u3_21:
   389  0027  282A               	goto	i1l671
   390  0028                     u3_20:
   391  0028                     i1l669:
   392                           
   393                           ;main.c: 53:                 CCPR1L = 1;
   394  0028  3001               	movlw	1
   395  0029  0095               	movwf	21	;volatile
   396  002A                     i1l671:
   397                           
   398                           ;main.c: 55:             CCPR1L += 10;
   399  002A  300A               	movlw	10
   400  002B  00F0               	movwf	??_myIntHandler
   401  002C  0870               	movf	??_myIntHandler,w
   402  002D  0795               	addwf	21,f	;volatile
   403  002E                     i1l673:
   404                           
   405                           ;main.c: 58:         if (RB0)
   406  002E  1C06               	btfss	6,0	;volatile
   407  002F  2831               	goto	u4_21
   408  0030  2832               	goto	u4_20
   409  0031                     u4_21:
   410  0031  283B               	goto	i1l681
   411  0032                     u4_20:
   412  0032                     i1l675:
   413                           
   414                           ;main.c: 59:         {;main.c: 60:             if (CCPR1L == 0)
   415  0032  0815               	movf	21,w	;volatile
   416  0033  1D03               	btfss	3,2
   417  0034  2836               	goto	u5_21
   418  0035  2837               	goto	u5_20
   419  0036                     u5_21:
   420  0036  2839               	goto	i1l679
   421  0037                     u5_20:
   422  0037                     i1l677:
   423                           
   424                           ;main.c: 61:                 CCPR1L = 245;
   425  0037  30F5               	movlw	245
   426  0038  0095               	movwf	21	;volatile
   427  0039                     i1l679:
   428                           
   429                           ;main.c: 63:             CCPR1L -= 10;
   430  0039  300A               	movlw	10
   431  003A  0295               	subwf	21,f	;volatile
   432  003B                     i1l681:
   433                           
   434                           ;main.c: 66:     RBIF = 0;
   435  003B  100B               	bcf	11,0	;volatile
   436  003C                     i1l53:
   437  003C  0872               	movf	??_myIntHandler+2,w
   438  003D  008A               	movwf	10
   439  003E  0E71               	swapf	(??_myIntHandler+1)^(0+4294967168),w
   440  003F  0083               	movwf	3
   441  0040  0EFE               	swapf	btemp,f
   442  0041  0E7E               	swapf	btemp,w
   443  0042  0009               	retfie
   444  0043                     __end_of_myIntHandler:
   445  007E                     btemp	set	126	;btemp
   446  007E                     wtemp0	set	126
   447                           
   448                           	psect	intentry
   449  0004                     __pintentry:	
   450                           ;incstack = 0
   451                           ; Regs used in _myIntHandler: [wreg+status,2+status,0]
   452                           
   453  0004                     interrupt_function:
   454  007E                     saved_w	set	btemp
   455  0004  00FE               	movwf	btemp
   456  0005  0E03               	swapf	3,w
   457  0006  00F1               	movwf	??_myIntHandler+1
   458  0007  080A               	movf	10,w
   459  0008  00F2               	movwf	??_myIntHandler+2
   460  0009  120A  118A  2813   	ljmp	_myIntHandler
   461                           
   462                           	psect	config
   463                           
   464                           ;Config register CONFIG @ 0x2007
   465                           ;	Oscillator Selection bits
   466                           ;	FOSC = XT, XT oscillator
   467                           ;	Watchdog Timer Enable bit
   468                           ;	WDTE = OFF, WDT disabled
   469                           ;	Power-up Timer Enable bit
   470                           ;	PWRTE = OFF, PWRT disabled
   471                           ;	Brown-out Reset Enable bit
   472                           ;	BOREN = ON, BOR enabled
   473                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   474                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   475                           ;	Data EEPROM Memory Code Protection bit
   476                           ;	CPD = OFF, Data EEPROM code protection off
   477                           ;	Flash Program Memory Write Enable bits
   478                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   479                           ;	In-Circuit Debugger Mode bit
   480                           ;	DEBUG = 0x1, unprogrammed default
   481                           ;	Flash Program Memory Code Protection bit
   482                           ;	CP = OFF, Code protection off
   483  2007                     	org	8199
   484  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIntHandler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIntHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIntHandler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIntHandler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIntHandler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myIntHandler                                         3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myIntHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Dec 24 22:44:28 2020

                     l40 005A                       l39 005A                      l651 0052  
                    l653 0053                      l645 0043                      l655 0058  
                    l647 0049                      l657 0059                      l649 0051  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _PR2 0092                     _RBIE 005B  
                   _RBIF 0058                     i1l53 003C                     u1_20 0019  
                   u1_21 0018                     u2_20 0022                     u2_21 0021  
                   u3_20 0028                     u3_21 0027                     u4_20 0032  
                   u4_21 0031                     u5_20 0037                     u5_21 0036  
                   _main 0043                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l661 0019                    i1l671 002A  
                  i1l663 001C                    i1l681 003B                    i1l673 002E  
                  i1l665 001E                    i1l675 0032                    i1l667 0022  
                  i1l659 0013                    i1l677 0037                    i1l669 0028  
                  i1l679 0039                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 005E                   ??_main 0073                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCPR1L 0015                   _TMR2ON 0092  
          ?_myIntHandler 0070                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070           ??_myIntHandler 0070               __pmaintext 0043  
             __pintentry 0004                  _T2CKPS0 0090                  _T2CKPS1 0091  
                __ptext1 0013     end_of_initialization 000F     __end_of_myIntHandler 0043  
    start_initialization 000F                ___latbits 0002    __size_of_myIntHandler 0030  
           _myIntHandler 0013        interrupt_function 0004            __size_of_main 001B  
               intlevel1 0000  
