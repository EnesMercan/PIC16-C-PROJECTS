

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Dec 24 13:00:09 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0015                     _CCPR1	set	21
   169  000E                     _TMR1	set	14
   170  000B                     _INTCONbits	set	11
   171  0007                     _PORTC	set	7
   172  00BB                     _CCP1M3	set	187
   173  00BA                     _CCP1M2	set	186
   174  00B9                     _CCP1M1	set	185
   175  00B8                     _CCP1M0	set	184
   176  0080                     _TMR1ON	set	128
   177  0083                     _T1OSCEN	set	131
   178  0081                     _TMR1CS	set	129
   179  003A                     _RC2	set	58
   180  0062                     _CCP1IF	set	98
   181  0087                     _TRISC	set	135
   182  0462                     _CCP1IE	set	1122
   183                           
   184                           	psect	cinit
   185  000F                     start_initialization:	
   186                           ; #config settings
   187                           
   188  000F                     __initialization:
   189  000F                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192  000F                     __end_of__initialization:
   193  000F  0183               	clrf	3
   194  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197  0070                     __pcstackCOMMON:
   198  0070                     ?_setTimer:
   199  0070                     ?_setCaptureModule:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_myInterruptHandler:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ??_myInterruptHandler:	
   209                           ; 1 bytes @ 0x0
   210                           
   211                           
   212                           ; 1 bytes @ 0x0
   213  0070                     	ds	2
   214  0072                     ??_setTimer:
   215  0072                     ??_setCaptureModule:	
   216                           ; 1 bytes @ 0x2
   217                           
   218  0072                     ??_main:	
   219                           ; 1 bytes @ 0x2
   220                           
   221                           
   222                           	psect	maintext
   223  0013                     __pmaintext:	
   224                           ; 1 bytes @ 0x2
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 63 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, pclath, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : B00/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   244 ;;      Params:         0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels required when called:    2
   250 ;; This function calls:
   251 ;;		_setCaptureModule
   252 ;;		_setTimer
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           
   259                           ;psect for function _main
   260  0013                     _main:
   261  0013                     l650:	
   262                           ;incstack = 0
   263                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   264                           
   265                           
   266                           ;main.c: 65:     PORTC = 0;
   267  0013  1283               	bcf	3,5	;RP0=0, select bank0
   268  0014  1303               	bcf	3,6	;RP1=0, select bank0
   269  0015  0187               	clrf	7	;volatile
   270  0016                     l652:
   271                           
   272                           ;main.c: 66:     TRISC = 1;
   273  0016  3001               	movlw	1
   274  0017  1683               	bsf	3,5	;RP0=1, select bank1
   275  0018  1303               	bcf	3,6	;RP1=0, select bank1
   276  0019  0087               	movwf	7	;volatile
   277  001A                     l654:
   278                           
   279                           ;main.c: 68:     setTimer();
   280  001A  120A  118A  204C  120A  118A  	fcall	_setTimer
   281  001F                     l656:
   282                           
   283                           ;main.c: 69:     setCaptureModule();
   284  001F  120A  118A  203C  120A  118A  	fcall	_setCaptureModule
   285  0024                     l39:	
   286                           ;main.c: 71:     while (1)
   287                           
   288  0024                     l40:	
   289                           ;main.c: 72:     {;main.c: 74:     }
   290                           
   291  0024  2824               	goto	l39
   292  0025  120A  118A  280C   	ljmp	start
   293  0028                     __end_of_main:
   294                           
   295                           	psect	text1
   296  004C                     __ptext1:	
   297 ;; *************** function _setTimer *****************
   298 ;; Defined at:
   299 ;;		line 93 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		None
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; Hardware stack levels required when called:    1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _setTimer
   329  004C                     _setTimer:
   330  004C                     l646:	
   331                           ;incstack = 0
   332                           ; Regs used in _setTimer: []
   333                           
   334                           
   335                           ;main.c: 95:     INTCONbits.GIE = 1;
   336  004C  178B               	bsf	11,7	;volatile
   337                           
   338                           ;main.c: 96:     INTCONbits.PEIE = 1;
   339  004D  170B               	bsf	11,6	;volatile
   340                           
   341                           ;main.c: 98:     TMR1CS = 1;
   342  004E  1283               	bcf	3,5	;RP0=0, select bank0
   343  004F  1303               	bcf	3,6	;RP1=0, select bank0
   344  0050  1490               	bsf	16,1	;volatile
   345                           
   346                           ;main.c: 99:     T1OSCEN = 1;
   347  0051  1590               	bsf	16,3	;volatile
   348                           
   349                           ;main.c: 100:     TMR1 = 1;
   350  0052  3000               	movlw	0
   351  0053  008F               	movwf	15	;volatile
   352  0054  3001               	movlw	1
   353  0055  008E               	movwf	14	;volatile
   354                           
   355                           ;main.c: 101:     TMR1ON = 1;
   356  0056  1410               	bsf	16,0	;volatile
   357  0057                     l51:
   358  0057  0008               	return
   359  0058                     __end_of_setTimer:
   360                           
   361                           	psect	text2
   362  003C                     __ptext2:	
   363 ;; *************** function _setCaptureModule *****************
   364 ;; Defined at:
   365 ;;		line 106 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		None
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; Hardware stack levels required when called:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _setCaptureModule
   395  003C                     _setCaptureModule:
   396  003C                     l648:	
   397                           ;incstack = 0
   398                           ; Regs used in _setCaptureModule: []
   399                           
   400                           
   401                           ;main.c: 108:     CCP1M0 = 1;
   402  003C  1283               	bcf	3,5	;RP0=0, select bank0
   403  003D  1303               	bcf	3,6	;RP1=0, select bank0
   404  003E  1417               	bsf	23,0	;volatile
   405                           
   406                           ;main.c: 109:     CCP1M1 = 1;
   407  003F  1497               	bsf	23,1	;volatile
   408                           
   409                           ;main.c: 110:     CCP1M2 = 0;
   410  0040  1117               	bcf	23,2	;volatile
   411                           
   412                           ;main.c: 111:     CCP1M3 = 1;
   413  0041  1597               	bsf	23,3	;volatile
   414                           
   415                           ;main.c: 113:     CCP1IE = 1;
   416  0042  1683               	bsf	3,5	;RP0=1, select bank1
   417  0043  1303               	bcf	3,6	;RP1=0, select bank1
   418  0044  150C               	bsf	12,2	;volatile
   419                           
   420                           ;main.c: 115:     CCPR1 = 5;
   421  0045  3000               	movlw	0
   422  0046  1283               	bcf	3,5	;RP0=0, select bank0
   423  0047  1303               	bcf	3,6	;RP1=0, select bank0
   424  0048  0096               	movwf	22	;volatile
   425  0049  3005               	movlw	5
   426  004A  0095               	movwf	21	;volatile
   427  004B                     l54:
   428  004B  0008               	return
   429  004C                     __end_of_setCaptureModule:
   430                           
   431                           	psect	text3
   432  0028                     __ptext3:	
   433 ;; *************** function _myInterruptHandler *****************
   434 ;; Defined at:
   435 ;;		line 80 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          2       0       0       0       0
   452 ;;      Totals:         2       0       0       0       0
   453 ;;Total ram usage:        2 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		Interrupt level 1
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _myInterruptHandler
   464  0028                     _myInterruptHandler:
   465  0028                     i1l658:
   466                           
   467                           ;main.c: 82:     if (CCP1IF)
   468  0028  1283               	bcf	3,5	;RP0=0, select bank0
   469  0029  1303               	bcf	3,6	;RP1=0, select bank0
   470  002A  1D0C               	btfss	12,2	;volatile
   471  002B  282D               	goto	u1_21
   472  002C  282E               	goto	u1_20
   473  002D                     u1_21:
   474  002D  2835               	goto	i1l48
   475  002E                     u1_20:
   476  002E                     i1l660:
   477                           
   478                           ;main.c: 83:     {;main.c: 84:         RC2 = ~RC2;
   479  002E  3004               	movlw	4
   480  002F  0687               	xorwf	7,f
   481  0030                     i1l662:
   482                           
   483                           ;main.c: 86:         CCP1IF = 0;
   484  0030  110C               	bcf	12,2	;volatile
   485  0031                     i1l664:
   486                           
   487                           ;main.c: 88:         TMR1 = 1;
   488  0031  3000               	movlw	0
   489  0032  008F               	movwf	15	;volatile
   490  0033  3001               	movlw	1
   491  0034  008E               	movwf	14	;volatile
   492  0035                     i1l48:
   493  0035  0871               	movf	??_myInterruptHandler+1,w
   494  0036  008A               	movwf	10
   495  0037  0E70               	swapf	??_myInterruptHandler^(0+4294967168),w
   496  0038  0083               	movwf	3
   497  0039  0EFE               	swapf	btemp,f
   498  003A  0E7E               	swapf	btemp,w
   499  003B  0009               	retfie
   500  003C                     __end_of_myInterruptHandler:
   501  007E                     btemp	set	126	;btemp
   502  007E                     wtemp0	set	126
   503                           
   504                           	psect	intentry
   505  0004                     __pintentry:	
   506                           ;incstack = 0
   507                           ; Regs used in _myInterruptHandler: [wreg]
   508                           
   509  0004                     interrupt_function:
   510  007E                     saved_w	set	btemp
   511  0004  00FE               	movwf	btemp
   512  0005  0E03               	swapf	3,w
   513  0006  00F0               	movwf	??_myInterruptHandler
   514  0007  080A               	movf	10,w
   515  0008  00F1               	movwf	??_myInterruptHandler+1
   516  0009  120A  118A  2828   	ljmp	_myInterruptHandler
   517                           
   518                           	psect	config
   519                           
   520                           ;Config register CONFIG @ 0x2007
   521                           ;	Oscillator Selection bits
   522                           ;	FOSC = XT, XT oscillator
   523                           ;	Watchdog Timer Enable bit
   524                           ;	WDTE = OFF, WDT disabled
   525                           ;	Power-up Timer Enable bit
   526                           ;	PWRTE = OFF, PWRT disabled
   527                           ;	Brown-out Reset Enable bit
   528                           ;	BOREN = OFF, BOR disabled
   529                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   530                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   531                           ;	Data EEPROM Memory Code Protection bit
   532                           ;	CPD = OFF, Data EEPROM code protection off
   533                           ;	Flash Program Memory Write Enable bits
   534                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   535                           ;	In-Circuit Debugger Mode bit
   536                           ;	DEBUG = 0x1, unprogrammed default
   537                           ;	Flash Program Memory Code Protection bit
   538                           ;	CP = OFF, Code protection off
   539  2007                     	org	8199
   540  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myInterruptHandler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterruptHandler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myInterruptHandler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterruptHandler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                   _setCaptureModule
                           _setTimer
 ---------------------------------------------------------------------------------
 (1) _setTimer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setCaptureModule                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myInterruptHandler                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setCaptureModule
   _setTimer

 _myInterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Dec 24 13:00:09 2020

                         l40 0024                           l51 0057                           l54 004B  
                         l39 0024                          l650 0013                          l652 0016  
                        l646 004C                          l654 001A                          l648 003C  
                        l656 001F                          _RC2 003A                         i1l48 0035  
                       _TMR1 000E                         u1_20 002E                         u1_21 002D  
                       _main 0013                         btemp 007E                         start 000C  
                      ?_main 0070                        _CCPR1 0015                        i1l660 002E  
                      i1l662 0030                        i1l664 0031                        i1l658 0028  
                      _PORTC 0007                        _TRISC 0087                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 000F  
               __end_of_main 0028     __end_of_setCaptureModule 004C                       ??_main 0072  
                     _CCP1M0 00B8                       _CCP1M1 00B9                       _CCP1M2 00BA  
                     _CCP1M3 00BB                       _CCP1IE 0462                       _CCP1IF 0062  
                     _TMR1CS 0081                       _TMR1ON 0080   __end_of_myInterruptHandler 003C  
           __end_of_setTimer 0058                       saved_w 007E      __end_of__initialization 000F  
             __pcstackCOMMON 0070                   __pmaintext 0013                   __pintentry 0004  
                    _T1OSCEN 0083                    ?_setTimer 0070                      __ptext1 004C  
                    __ptext2 003C                      __ptext3 0028            ?_setCaptureModule 0070  
         ??_setCaptureModule 0072         end_of_initialization 000F                   ??_setTimer 0072  
         _myInterruptHandler 0028          ?_myInterruptHandler 0070         ??_myInterruptHandler 0070  
        start_initialization 000F                    ___latbits 0002            __size_of_setTimer 000C  
  __size_of_setCaptureModule 0010            interrupt_function 0004                __size_of_main 0015  
                   _setTimer 004C  __size_of_myInterruptHandler 0014                   _INTCONbits 000B  
                   intlevel1 0000             _setCaptureModule 003C  
