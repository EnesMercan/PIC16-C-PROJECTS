

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 19 12:37:44 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0092                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0092                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009F                     	;# 
   122                           
   123                           	psect	idataCOMMON
   124  0050                     __pidataCOMMON:
   125                           
   126                           ;initializer for _counter
   127  0050  3401               	retlw	1
   128  000B                     _INTCONbits	set	11
   129  0001                     _TMR0	set	1
   130  0006                     _PORTB	set	6
   131  005A                     _T0IF	set	90
   132  0081                     _OPTION_REG	set	129
   133  0086                     _TRISB	set	134
   134                           
   135                           	psect	cinit
   136  000B                     start_initialization:	
   137                           ; #config settings
   138                           
   139  000B                     __initialization:
   140                           
   141                           ; Initialize objects allocated to COMMON
   142  000B  2050               	fcall	__pidataCOMMON	;fetch initializer
   143  000C  00F6               	movwf	__pdataCOMMON& (0+127)
   144  000D                     end_of_initialization:	
   145                           ;End of C runtime variable initialization code
   146                           
   147  000D                     __end_of__initialization:
   148  000D  0183               	clrf	3
   149  000E  280F               	ljmp	_main	;jump to C main() function
   150                           
   151                           	psect	dataCOMMON
   152  0076                     __pdataCOMMON:
   153  0076                     _counter:
   154  0076                     	ds	1
   155                           
   156                           	psect	cstackCOMMON
   157  0070                     __pcstackCOMMON:
   158  0070                     ?_main:
   159  0070                     ?_myInterruptHnadler:	
   160                           ; 1 bytes @ 0x0
   161                           
   162  0070                     ??_myInterruptHnadler:	
   163                           ; 1 bytes @ 0x0
   164                           
   165                           
   166                           ; 1 bytes @ 0x0
   167  0070                     	ds	3
   168  0073                     ??_main:
   169                           
   170                           ; 1 bytes @ 0x3
   171  0073                     	ds	3
   172                           
   173                           	psect	maintext
   174  000F                     __pmaintext:	
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 61 in file "main.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2, status,0
   189 ;; Tracked objects:
   190 ;;		On entry : B00/0
   191 ;;		On exit  : 0/0
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   194 ;;      Params:         0       0       0       0
   195 ;;      Locals:         0       0       0       0
   196 ;;      Temps:          3       0       0       0
   197 ;;      Totals:         3       0       0       0
   198 ;;Total ram usage:        3 bytes
   199 ;; Hardware stack levels required when called:    1
   200 ;; This function calls:
   201 ;;		Nothing
   202 ;; This function is called by:
   203 ;;		Startup code after reset
   204 ;; This function uses a non-reentrant model
   205 ;;
   206                           
   207                           
   208                           ;psect for function _main
   209  000F                     _main:
   210  000F                     l623:	
   211                           ;incstack = 0
   212                           ; Regs used in _main: [wreg+status,2+status,0]
   213                           
   214                           
   215                           ;main.c: 63:     PORTB = 0;
   216  000F  1283               	bcf	3,5	;RP0=0, select bank0
   217  0010  1303               	bcf	3,6	;RP1=0, select bank0
   218  0011  0186               	clrf	6	;volatile
   219                           
   220                           ;main.c: 64:     TRISB = 0;
   221  0012  1683               	bsf	3,5	;RP0=1, select bank1
   222  0013  1303               	bcf	3,6	;RP1=0, select bank1
   223  0014  0186               	clrf	6	;volatile
   224                           
   225                           ;main.c: 65:     TMR0 = 0x00;
   226  0015  1283               	bcf	3,5	;RP0=0, select bank0
   227  0016  1303               	bcf	3,6	;RP1=0, select bank0
   228  0017  0181               	clrf	1	;volatile
   229  0018                     l625:
   230                           
   231                           ;main.c: 66:     OPTION_REG = 0b00000111;
   232  0018  3007               	movlw	7
   233  0019  1683               	bsf	3,5	;RP0=1, select bank1
   234  001A  1303               	bcf	3,6	;RP1=0, select bank1
   235  001B  0081               	movwf	1	;volatile
   236  001C                     l627:
   237                           
   238                           ;main.c: 67:     INTCONbits.GIE = 1;
   239  001C  178B               	bsf	11,7	;volatile
   240  001D                     l629:
   241                           
   242                           ;main.c: 68:     INTCONbits.T0IE = 1;
   243  001D  168B               	bsf	11,5	;volatile
   244  001E                     l631:
   245                           
   246                           ;main.c: 71:     {;main.c: 72:          PORTB ^= 0x01;
   247  001E  3001               	movlw	1
   248  001F  00F3               	movwf	??_main
   249  0020  0873               	movf	??_main,w
   250  0021  1283               	bcf	3,5	;RP0=0, select bank0
   251  0022  1303               	bcf	3,6	;RP1=0, select bank0
   252  0023  0686               	xorwf	6,f	;volatile
   253  0024                     l633:
   254                           
   255                           ;main.c: 73:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   256  0024  300B               	movlw	11
   257  0025  00F5               	movwf	??_main+2
   258  0026  3026               	movlw	38
   259  0027  00F4               	movwf	??_main+1
   260  0028  305D               	movlw	93
   261  0029  00F3               	movwf	??_main
   262  002A                     u37:
   263  002A  0BF3               	decfsz	??_main,f
   264  002B  282A               	goto	u37
   265  002C  0BF4               	decfsz	??_main+1,f
   266  002D  282A               	goto	u37
   267  002E  0BF5               	decfsz	??_main+2,f
   268  002F  282A               	goto	u37
   269  0030  2831               	nop2
   270  0031  281E               	goto	l631
   271  0032  280A               	ljmp	start
   272  0033                     __end_of_main:
   273                           
   274                           	psect	text1
   275  0033                     __ptext1:	
   276 ;; *************** function _myInterruptHnadler *****************
   277 ;; Defined at:
   278 ;;		line 81 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   292 ;;      Params:         0       0       0       0
   293 ;;      Locals:         0       0       0       0
   294 ;;      Temps:          3       0       0       0
   295 ;;      Totals:         3       0       0       0
   296 ;;Total ram usage:        3 bytes
   297 ;; Hardware stack levels used:    1
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		Interrupt level 1
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           
   306                           ;psect for function _myInterruptHnadler
   307  0033                     _myInterruptHnadler:
   308  0033                     i1l635:
   309                           
   310                           ;main.c: 83:     if (T0IF)
   311  0033  1D0B               	btfss	11,2	;volatile
   312  0034  2836               	goto	u1_21
   313  0035  2837               	goto	u1_20
   314  0036                     u1_21:
   315  0036  2849               	goto	i1l31
   316  0037                     u1_20:
   317  0037                     i1l637:
   318                           
   319                           ;main.c: 84:     {;main.c: 86:         counter++;
   320  0037  3001               	movlw	1
   321  0038  00F0               	movwf	??_myInterruptHnadler
   322  0039  0870               	movf	??_myInterruptHnadler,w
   323  003A  07F6               	addwf	_counter,f
   324  003B                     i1l639:
   325                           
   326                           ;main.c: 88:         INTCONbits.T0IF = 0;
   327  003B  110B               	bcf	11,2	;volatile
   328                           
   329                           ;main.c: 90:         if (counter == 16)
   330  003C  3010               	movlw	16
   331  003D  0676               	xorwf	_counter,w
   332  003E  1D03               	btfss	3,2
   333  003F  2841               	goto	u2_21
   334  0040  2842               	goto	u2_20
   335  0041                     u2_21:
   336  0041  2849               	goto	i1l31
   337  0042                     u2_20:
   338  0042                     i1l641:
   339                           
   340                           ;main.c: 91:         {;main.c: 92:             PORTB ^= 0b00001000;
   341  0042  3008               	movlw	8
   342  0043  00F0               	movwf	??_myInterruptHnadler
   343  0044  0870               	movf	??_myInterruptHnadler,w
   344  0045  1283               	bcf	3,5	;RP0=0, select bank0
   345  0046  1303               	bcf	3,6	;RP1=0, select bank0
   346  0047  0686               	xorwf	6,f	;volatile
   347  0048                     i1l643:
   348                           
   349                           ;main.c: 93:             counter = 0;
   350  0048  01F6               	clrf	_counter
   351  0049                     i1l31:
   352  0049  0872               	movf	??_myInterruptHnadler+2,w
   353  004A  008A               	movwf	10
   354  004B  0E71               	swapf	(??_myInterruptHnadler+1)^(0+4294967168),w
   355  004C  0083               	movwf	3
   356  004D  0EFE               	swapf	btemp,f
   357  004E  0E7E               	swapf	btemp,w
   358  004F  0009               	retfie
   359  0050                     __end_of_myInterruptHnadler:
   360  007E                     btemp	set	126	;btemp
   361  007E                     wtemp0	set	126
   362                           
   363                           	psect	intentry
   364  0004                     __pintentry:	
   365                           ;incstack = 0
   366                           ; Regs used in _myInterruptHnadler: [wreg+status,2+status,0]
   367                           
   368  0004                     interrupt_function:
   369  007E                     saved_w	set	btemp
   370  0004  00FE               	movwf	btemp
   371  0005  0E03               	swapf	3,w
   372  0006  00F1               	movwf	??_myInterruptHnadler+1
   373  0007  080A               	movf	10,w
   374  0008  00F2               	movwf	??_myInterruptHnadler+2
   375  0009  2833               	ljmp	_myInterruptHnadler
   376                           
   377                           	psect	config
   378                           
   379                           ;Config register CONFIG @ 0x2007
   380                           ;	Oscillator Selection bits
   381                           ;	FOSC = EXTRCIO, RC oscillator: I/O function on RA6/OSC2/CLKOUT pin, Resistor and Capac
      +                          itor on RA7/OSC1/CLKIN
   382                           ;	Watchdog Timer Enable bit
   383                           ;	WDTE = OFF, WDT disabled
   384                           ;	Power-up Timer Enable bit
   385                           ;	PWRTE = OFF, PWRT disabled
   386                           ;	RA5/MCLR/VPP Pin Function Select bit
   387                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   388                           ;	Brown-out Detect Enable bit
   389                           ;	BOREN = OFF, BOD disabled
   390                           ;	Low-Voltage Programming Enable bit
   391                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   392                           ;	Data EE Memory Code Protection bit
   393                           ;	CPD = OFF, Data memory code protection off
   394                           ;	Flash Program Memory Code Protection bit
   395                           ;	CP = OFF, Code protection off
   396  2007                     	org	8199
   397  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myInterruptHnadler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterruptHnadler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterruptHnadler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterruptHnadler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myInterruptHnadler                                   3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myInterruptHnadler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       7      10        0.0%
ABS                  0      0       7       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 19 12:37:44 2020

                         u37 002A                          l631 001E                          l623 000F  
                        l633 0024                          l625 0018                          l627 001C  
                        l629 001D                         _T0IF 005A                         i1l31 0049  
                       _TMR0 0001                         u1_20 0037                         u1_21 0036  
                       u2_20 0042                         u2_21 0041                         _main 000F  
                       btemp 007E                         start 000A                        ?_main 0070  
                      i1l641 0042                        i1l643 0048                        i1l635 0033  
                      i1l637 0037                        i1l639 003B                        _PORTB 0006  
                      _TRISB 0086                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000B                 __end_of_main 0033  
                     ??_main 0073   __end_of_myInterruptHnadler 0050                 __pdataCOMMON 0076  
                     saved_w 007E      __end_of__initialization 000D               __pcstackCOMMON 0070  
                 __pmaintext 000F                   __pintentry 0004                      __ptext1 0033  
                    _counter 0076         end_of_initialization 000D           _myInterruptHnadler 0033  
        ?_myInterruptHnadler 0070                __pidataCOMMON 0050         ??_myInterruptHnadler 0070  
        start_initialization 000B                    ___latbits 0000            interrupt_function 0004  
              __size_of_main 0024  __size_of_myInterruptHnadler 001D                   _INTCONbits 000B  
                   intlevel1 0000                   _OPTION_REG 0081  
