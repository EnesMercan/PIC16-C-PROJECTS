

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Nov 16 05:57:12 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F628A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  008C                     	;# 
    75  008E                     	;# 
    76  0092                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009F                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  008C                     	;# 
   112  008E                     	;# 
   113  0092                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009F                     	;# 
   121                           
   122                           	psect	idataCOMMON
   123  0775                     __pidataCOMMON:
   124                           
   125                           ;initializer for _led
   126  0775  3401               	retlw	1
   127  0776  3402               	retlw	2
   128  0777  3404               	retlw	4
   129  0778  3408               	retlw	8
   130  0779  3410               	retlw	16
   131  077A  3420               	retlw	32
   132  077B  3440               	retlw	64
   133  077C  3480               	retlw	128
   134                           
   135                           	psect	strings
   136  0001                     __pstrings:
   137  0001                     stringtab:
   138  0001                     __stringtab:
   139  0001                     stringcode:	
   140                           ;	String table - string pointers are 1 byte each
   141                           
   142  0001                     stringdir:
   143  0001  3000               	movlw	high stringdir
   144  0002  008A               	movwf	10
   145  0003  0804               	movf	4,w
   146  0004  0A84               	incf	4,f
   147  0005  0782               	addwf	2,f
   148  0006                     __stringbase:
   149  0006  3400               	retlw	0
   150  0007                     __end_of__stringtab:
   151  0007                     _OFF_TIME:
   152  0007  340A               	retlw	10
   153  0008                     __end_of_OFF_TIME:
   154  0008                     _ON_TIME:
   155  0008  3423               	retlw	35
   156  0009                     __end_of_ON_TIME:
   157  0006                     _PORTB	set	6
   158  0086                     _TRISB	set	134
   159                           
   160                           	psect	cinit
   161  07EE                     start_initialization:	
   162                           ; #config settings
   163                           
   164  07EE                     __initialization:
   165                           
   166                           ; Initialize objects allocated to COMMON
   167  07EE  2775               	fcall	__pidataCOMMON	;fetch initializer
   168  07EF  00F0               	movwf	__pdataCOMMON& (0+127)
   169  07F0  2776               	fcall	__pidataCOMMON+1	;fetch initializer
   170  07F1  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   171  07F2  2777               	fcall	__pidataCOMMON+2	;fetch initializer
   172  07F3  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   173  07F4  2778               	fcall	__pidataCOMMON+3	;fetch initializer
   174  07F5  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   175  07F6  2779               	fcall	__pidataCOMMON+4	;fetch initializer
   176  07F7  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   177  07F8  277A               	fcall	__pidataCOMMON+5	;fetch initializer
   178  07F9  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   179  07FA  277B               	fcall	__pidataCOMMON+6	;fetch initializer
   180  07FB  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   181  07FC  277C               	fcall	__pidataCOMMON+7	;fetch initializer
   182  07FD  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   183  07FE                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  07FE                     __end_of__initialization:
   187  07FE  0183               	clrf	3
   188  07FF  2F7D               	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	dataCOMMON
   191  0070                     __pdataCOMMON:
   192  0070                     _led:
   193  0070                     	ds	8
   194                           
   195                           	psect	cstackCOMMON
   196  0078                     __pcstackCOMMON:
   197  0078                     ?_main:
   198  0078                     ??_main:	
   199                           ; 1 bytes @ 0x0
   200                           
   201                           
   202                           ; 1 bytes @ 0x0
   203  0078                     	ds	2
   204  007A                     main@i_39:
   205                           
   206                           ; 1 bytes @ 0x2
   207  007A                     	ds	1
   208  007B                     main@i:
   209                           
   210                           ; 1 bytes @ 0x3
   211  007B                     	ds	1
   212                           
   213                           	psect	maintext
   214  077D                     __pmaintext:	
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 26 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;  i               1    2[COMMON] char 
   225 ;;  i               1    3[COMMON] char 
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   235 ;;      Params:         0       0       0       0
   236 ;;      Locals:         2       0       0       0
   237 ;;      Temps:          2       0       0       0
   238 ;;      Totals:         4       0       0       0
   239 ;;Total ram usage:        4 bytes
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           
   248                           ;psect for function _main
   249  077D                     _main:
   250  077D                     l618:	
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   253                           
   254                           
   255                           ;main.c: 29:     PORTB = 0;
   256  077D  1283               	bcf	3,5	;RP0=0, select bank0
   257  077E  1303               	bcf	3,6	;RP1=0, select bank0
   258  077F  0186               	clrf	6	;volatile
   259                           
   260                           ;main.c: 30:     TRISB = 0;
   261  0780  1683               	bsf	3,5	;RP0=1, select bank1
   262  0781  1303               	bcf	3,6	;RP1=0, select bank1
   263  0782  0186               	clrf	6	;volatile
   264  0783                     l17:	
   265                           ;main.c: 33:     while (1)
   266                           
   267                           
   268                           ;main.c: 34:     {;main.c: 36:         for (int8_t i = 0; i<8; i++)
   269  0783  01FB               	clrf	main@i
   270  0784                     l624:
   271                           
   272                           ;main.c: 37:         {;main.c: 38:             PORTB = led[i];
   273  0784  087B               	movf	main@i,w
   274  0785  3E70               	addlw	(low (_led| 0))& (0+255)
   275  0786  0084               	movwf	4
   276  0787  0800               	movf	0,w
   277  0788  1283               	bcf	3,5	;RP0=0, select bank0
   278  0789  1303               	bcf	3,6	;RP1=0, select bank0
   279  078A  0086               	movwf	6	;volatile
   280  078B                     l626:
   281                           
   282                           ;main.c: 39:             _delay((unsigned long)((ON_TIME)*(10000000/4000.0)));
   283  078B  3072               	movlw	114
   284  078C  00F9               	movwf	??_main+1
   285  078D  30A1               	movlw	161
   286  078E  00F8               	movwf	??_main
   287  078F                     u47:
   288  078F  0BF8               	decfsz	??_main,f
   289  0790  2F8F               	goto	u47
   290  0791  0BF9               	decfsz	??_main+1,f
   291  0792  2F8F               	goto	u47
   292  0793  2F94               	nop2
   293  0794                     l628:
   294                           
   295                           ;main.c: 41:             if ( i == 7)
   296  0794  3007               	movlw	7
   297  0795  067B               	xorwf	main@i,w
   298  0796  1D03               	btfss	3,2
   299  0797  2F99               	goto	u11
   300  0798  2F9A               	goto	u10
   301  0799                     u11:
   302  0799  2F9B               	goto	l632
   303  079A                     u10:
   304  079A  2FA7               	goto	l636
   305  079B                     l632:
   306                           
   307                           ;main.c: 44:             PORTB = 0;
   308  079B  1283               	bcf	3,5	;RP0=0, select bank0
   309  079C  1303               	bcf	3,6	;RP1=0, select bank0
   310  079D  0186               	clrf	6	;volatile
   311  079E                     l634:
   312                           
   313                           ;main.c: 45:             _delay((unsigned long)((OFF_TIME)*(10000000/4000.0)));
   314  079E  3021               	movlw	33
   315  079F  00F9               	movwf	??_main+1
   316  07A0  3076               	movlw	118
   317  07A1  00F8               	movwf	??_main
   318  07A2                     u57:
   319  07A2  0BF8               	decfsz	??_main,f
   320  07A3  2FA2               	goto	u57
   321  07A4  0BF9               	decfsz	??_main+1,f
   322  07A5  2FA2               	goto	u57
   323  07A6  0000               	nop
   324  07A7                     l636:
   325  07A7  3001               	movlw	1
   326  07A8  00F8               	movwf	??_main
   327  07A9  0878               	movf	??_main,w
   328  07AA  07FB               	addwf	main@i,f
   329  07AB                     l638:
   330  07AB  087B               	movf	main@i,w
   331  07AC  3A80               	xorlw	128
   332  07AD  3E78               	addlw	-136
   333  07AE  1C03               	skipc
   334  07AF  2FB1               	goto	u21
   335  07B0  2FB2               	goto	u20
   336  07B1                     u21:
   337  07B1  2F84               	goto	l624
   338  07B2                     u20:
   339  07B2                     l640:
   340                           
   341                           ;main.c: 49:         _delay((unsigned long)((ON_TIME)*(10000000/4000.0)));
   342  07B2  3072               	movlw	114
   343  07B3  00F9               	movwf	??_main+1
   344  07B4  30A1               	movlw	161
   345  07B5  00F8               	movwf	??_main
   346  07B6                     u67:
   347  07B6  0BF8               	decfsz	??_main,f
   348  07B7  2FB6               	goto	u67
   349  07B8  0BF9               	decfsz	??_main+1,f
   350  07B9  2FB6               	goto	u67
   351  07BA  2FBB               	nop2
   352                           
   353                           ;main.c: 52:         for (int8_t i = 7; i>=0; i--)
   354  07BB  3007               	movlw	7
   355  07BC  00F8               	movwf	??_main
   356  07BD  0878               	movf	??_main,w
   357  07BE  00FA               	movwf	main@i_39
   358  07BF                     l646:
   359                           
   360                           ;main.c: 53:         {;main.c: 54:             PORTB = led[i];
   361  07BF  087A               	movf	main@i_39,w
   362  07C0  3E70               	addlw	(low (_led| 0))& (0+255)
   363  07C1  0084               	movwf	4
   364  07C2  0800               	movf	0,w
   365  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   366  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   367  07C5  0086               	movwf	6	;volatile
   368  07C6                     l648:
   369                           
   370                           ;main.c: 55:             _delay((unsigned long)((ON_TIME)*(10000000/4000.0)));
   371  07C6  3072               	movlw	114
   372  07C7  00F9               	movwf	??_main+1
   373  07C8  30A1               	movlw	161
   374  07C9  00F8               	movwf	??_main
   375  07CA                     u77:
   376  07CA  0BF8               	decfsz	??_main,f
   377  07CB  2FCA               	goto	u77
   378  07CC  0BF9               	decfsz	??_main+1,f
   379  07CD  2FCA               	goto	u77
   380  07CE  2FCF               	nop2
   381  07CF                     l650:
   382                           
   383                           ;main.c: 58:             PORTB = 0;
   384  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   385  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   386  07D1  0186               	clrf	6	;volatile
   387  07D2                     l652:
   388                           
   389                           ;main.c: 59:             _delay((unsigned long)((OFF_TIME)*(10000000/4000.0)));
   390  07D2  3021               	movlw	33
   391  07D3  00F9               	movwf	??_main+1
   392  07D4  3076               	movlw	118
   393  07D5  00F8               	movwf	??_main
   394  07D6                     u87:
   395  07D6  0BF8               	decfsz	??_main,f
   396  07D7  2FD6               	goto	u87
   397  07D8  0BF9               	decfsz	??_main+1,f
   398  07D9  2FD6               	goto	u87
   399  07DA  0000               	nop
   400  07DB                     l654:
   401                           
   402                           ;main.c: 61:         }
   403  07DB  30FF               	movlw	255
   404  07DC  00F8               	movwf	??_main
   405  07DD  0878               	movf	??_main,w
   406  07DE  07FA               	addwf	main@i_39,f
   407  07DF                     l656:
   408  07DF  1FFA               	btfss	main@i_39,7
   409  07E0  2FE2               	goto	u31
   410  07E1  2FE3               	goto	u30
   411  07E2                     u31:
   412  07E2  2FBF               	goto	l646
   413  07E3                     u30:
   414  07E3                     l658:
   415                           
   416                           ;main.c: 63:         _delay((unsigned long)((ON_TIME)*(10000000/4000.0)));
   417  07E3  3072               	movlw	114
   418  07E4  00F9               	movwf	??_main+1
   419  07E5  30A1               	movlw	161
   420  07E6  00F8               	movwf	??_main
   421  07E7                     u97:
   422  07E7  0BF8               	decfsz	??_main,f
   423  07E8  2FE7               	goto	u97
   424  07E9  0BF9               	decfsz	??_main+1,f
   425  07EA  2FE7               	goto	u97
   426  07EB  2FEC               	nop2
   427  07EC  2F83               	goto	l17
   428  07ED  2800               	ljmp	start
   429  07EE                     __end_of_main:
   430  007E                     btemp	set	126	;btemp
   431  007E                     wtemp0	set	126
   432                           
   433                           	psect	config
   434                           
   435                           ;Config register CONFIG @ 0x2007
   436                           ;	Oscillator Selection bits
   437                           ;	FOSC = EXTRCIO, RC oscillator: I/O function on RA6/OSC2/CLKOUT pin, Resistor and Capac
      +                          itor on RA7/OSC1/CLKIN
   438                           ;	Watchdog Timer Enable bit
   439                           ;	WDTE = OFF, WDT disabled
   440                           ;	Power-up Timer Enable bit
   441                           ;	PWRTE = OFF, PWRT disabled
   442                           ;	RA5/MCLR/VPP Pin Function Select bit
   443                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   444                           ;	Brown-out Detect Enable bit
   445                           ;	BOREN = OFF, BOD disabled
   446                           ;	Low-Voltage Programming Enable bit
   447                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   448                           ;	Data EE Memory Code Protection bit
   449                           ;	CPD = OFF, Data memory code protection off
   450                           ;	Flash Program Memory Code Protection bit
   451                           ;	CP = OFF, Code protection off
   452  2007                     	org	8199
   453  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    2
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     105
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      10        0.0%
ABS                  0      0       C       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Nov 16 05:57:12 2020

                      pc 0002                       l17 0783                       u10 079A  
                     u11 0799                       u20 07B2                       u21 07B1  
                     u30 07E3                       u31 07E2                       u47 078F  
                     u57 07A2                       u67 07B6                       u77 07CA  
                     u87 07D6                       u97 07E7                       fsr 0004  
                    l640 07B2                      l632 079B                      l624 0784  
                    l650 07CF                      l634 079E                      l626 078B  
                    l618 077D                      l652 07D2                      l636 07A7  
                    l628 0794                      l654 07DB                      l646 07BF  
                    l638 07AB                      l656 07DF                      l648 07C6  
                    l658 07E3                      _led 0070                      fsr0 0004  
                    indf 0000          __end_of_ON_TIME 0009                     _main 077D  
                   btemp 007E                     start 0000                    ?_main 0078  
       __end_of_OFF_TIME 0008                    _PORTB 0006                    _TRISB 0086  
                  main@i 007B                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0078             __pdataCOMMON 0070  __end_of__initialization 07FE  
         __pcstackCOMMON 0078               __pmaintext 077D                  _ON_TIME 0008  
             __stringtab 0001     end_of_initialization 07FE            __pidataCOMMON 0775  
    start_initialization 07EE                ___latbits 0000                __pstrings 0001  
               _OFF_TIME 0007              __stringbase 0006       __end_of__stringtab 0007  
          __size_of_main 0071                 main@i_39 007A                stringcode 0001  
               stringdir 0001                 stringtab 0001  
