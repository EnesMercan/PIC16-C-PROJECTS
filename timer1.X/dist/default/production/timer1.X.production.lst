

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 23 20:28:02 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  000E                     _TMR1	set	14
   169  0010                     _T1CONbits	set	16
   170  0010                     _T1CON	set	16
   171  000B                     _INTCONbits	set	11
   172  000C                     _PIR1bits	set	12
   173  0006                     _PORTB	set	6
   174  0060                     _TMR1IF	set	96
   175  008C                     _PIE1bits	set	140
   176  0086                     _TRISB	set	134
   177                           
   178                           	psect	cinit
   179  000F                     start_initialization:	
   180                           ; #config settings
   181                           
   182  000F                     __initialization:
   183                           
   184                           ; Clear objects allocated to COMMON
   185  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   186  0010                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  0010                     __end_of__initialization:
   190  0010  0183               	clrf	3
   191  0011  120A  118A  2835   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0074                     __pbssCOMMON:
   195  0074                     _counter:
   196  0074                     	ds	1
   197                           
   198                           	psect	cstackCOMMON
   199  0070                     __pcstackCOMMON:
   200  0070                     ?_setupTimer:
   201  0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_myInterruptHanlder:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ??_myInterruptHanlder:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212  0070                     	ds	3
   213  0073                     ??_setupTimer:
   214                           
   215                           ; 1 bytes @ 0x3
   216  0073                     	ds	1
   217  0074                     ??_main:
   218                           
   219                           	psect	maintext
   220  0035                     __pmaintext:	
   221                           ; 1 bytes @ 0x4
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 52 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0, pclath, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : B00/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   241 ;;      Params:         0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0
   244 ;;      Totals:         0       0       0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels required when called:    2
   247 ;; This function calls:
   248 ;;		_setupTimer
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           
   255                           ;psect for function _main
   256  0035                     _main:
   257  0035                     l640:	
   258                           ;incstack = 0
   259                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   260                           
   261                           
   262                           ;main.c: 54:     TRISB = 0;
   263  0035  1683               	bsf	3,5	;RP0=1, select bank1
   264  0036  1303               	bcf	3,6	;RP1=0, select bank1
   265  0037  0186               	clrf	6	;volatile
   266                           
   267                           ;main.c: 55:     PORTB = 0;
   268  0038  1283               	bcf	3,5	;RP0=0, select bank0
   269  0039  1303               	bcf	3,6	;RP1=0, select bank0
   270  003A  0186               	clrf	6	;volatile
   271  003B                     l642:
   272                           
   273                           ;main.c: 56:     setupTimer();
   274  003B  120A  118A  204A  120A  118A  	fcall	_setupTimer
   275  0040                     l644:
   276                           
   277                           ;main.c: 57:     TMR1 = 15536;
   278  0040  303C               	movlw	60
   279  0041  1283               	bcf	3,5	;RP0=0, select bank0
   280  0042  1303               	bcf	3,6	;RP1=0, select bank0
   281  0043  008F               	movwf	15	;volatile
   282  0044  30B0               	movlw	176
   283  0045  008E               	movwf	14	;volatile
   284  0046                     l27:	
   285                           ;main.c: 59:     while (1)
   286                           
   287  0046                     l28:	
   288                           ;main.c: 60:     {;main.c: 62:     }
   289                           
   290  0046  2846               	goto	l27
   291  0047  120A  118A  280C   	ljmp	start
   292  004A                     __end_of_main:
   293                           
   294                           	psect	text1
   295  004A                     __ptext1:	
   296 ;; *************** function _setupTimer *****************
   297 ;; Defined at:
   298 ;;		line 83 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0
   314 ;;      Temps:          1       0       0       0       0
   315 ;;      Totals:         1       0       0       0       0
   316 ;;Total ram usage:        1 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _setupTimer
   328  004A                     _setupTimer:
   329  004A                     l632:	
   330                           ;incstack = 0
   331                           ; Regs used in _setupTimer: [wreg+status,2+status,0]
   332                           
   333                           
   334                           ;main.c: 85:     INTCONbits.GIE = 1;
   335  004A  178B               	bsf	11,7	;volatile
   336                           
   337                           ;main.c: 86:     INTCONbits.PEIE = 1;
   338  004B  170B               	bsf	11,6	;volatile
   339                           
   340                           ;main.c: 87:     PIE1bits.TMR1IE = 1;
   341  004C  1683               	bsf	3,5	;RP0=1, select bank1
   342  004D  1303               	bcf	3,6	;RP1=0, select bank1
   343  004E  140C               	bsf	12,0	;volatile
   344  004F                     l634:
   345                           
   346                           ;main.c: 88:     T1CON &= ~(0x03);
   347  004F  30FC               	movlw	252
   348  0050  00F3               	movwf	??_setupTimer
   349  0051  0873               	movf	??_setupTimer,w
   350  0052  1283               	bcf	3,5	;RP0=0, select bank0
   351  0053  1303               	bcf	3,6	;RP1=0, select bank0
   352  0054  0590               	andwf	16,f	;volatile
   353  0055                     l636:
   354                           
   355                           ;main.c: 89:     T1CONbits.TMR1CS = 0;
   356  0055  1090               	bcf	16,1	;volatile
   357  0056                     l638:
   358                           
   359                           ;main.c: 90:     T1CONbits.TMR1ON = 1;
   360  0056  1410               	bsf	16,0	;volatile
   361  0057                     l40:
   362  0057  0008               	return
   363  0058                     __end_of_setupTimer:
   364                           
   365                           	psect	text2
   366  0014                     __ptext2:	
   367 ;; *************** function _myInterruptHanlder *****************
   368 ;; Defined at:
   369 ;;		line 67 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0
   385 ;;      Temps:          3       0       0       0       0
   386 ;;      Totals:         3       0       0       0       0
   387 ;;Total ram usage:        3 bytes
   388 ;; Hardware stack levels used:    1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		Interrupt level 1
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           
   397                           ;psect for function _myInterruptHanlder
   398  0014                     _myInterruptHanlder:
   399  0014                     i1l646:
   400                           
   401                           ;main.c: 69:     if (PIR1bits.TMR1IF)
   402  0014  1283               	bcf	3,5	;RP0=0, select bank0
   403  0015  1303               	bcf	3,6	;RP1=0, select bank0
   404  0016  1C0C               	btfss	12,0	;volatile
   405  0017  2819               	goto	u1_21
   406  0018  281A               	goto	u1_20
   407  0019                     u1_21:
   408  0019  282E               	goto	i1l37
   409  001A                     u1_20:
   410  001A                     i1l648:
   411                           
   412                           ;main.c: 70:     {;main.c: 71:         counter++;
   413  001A  3001               	movlw	1
   414  001B  00F0               	movwf	??_myInterruptHanlder
   415  001C  0870               	movf	??_myInterruptHanlder,w
   416  001D  07F4               	addwf	_counter,f
   417                           
   418                           ;main.c: 72:         if (counter == 20)
   419  001E  3014               	movlw	20
   420  001F  0674               	xorwf	_counter,w
   421  0020  1D03               	btfss	3,2
   422  0021  2823               	goto	u2_21
   423  0022  2824               	goto	u2_20
   424  0023                     u2_21:
   425  0023  2829               	goto	i1l654
   426  0024                     u2_20:
   427  0024                     i1l650:
   428                           
   429                           ;main.c: 73:         {;main.c: 74:             counter = 0;
   430  0024  01F4               	clrf	_counter
   431  0025                     i1l652:
   432                           
   433                           ;main.c: 75:             PORTB ^= 0x01;
   434  0025  3001               	movlw	1
   435  0026  00F0               	movwf	??_myInterruptHanlder
   436  0027  0870               	movf	??_myInterruptHanlder,w
   437  0028  0686               	xorwf	6,f	;volatile
   438  0029                     i1l654:
   439                           
   440                           ;main.c: 78:         TMR1 = 15536;
   441  0029  303C               	movlw	60
   442  002A  008F               	movwf	15	;volatile
   443  002B  30B0               	movlw	176
   444  002C  008E               	movwf	14	;volatile
   445  002D                     i1l656:
   446                           
   447                           ;main.c: 79:         TMR1IF = 0;
   448  002D  100C               	bcf	12,0	;volatile
   449  002E                     i1l37:
   450  002E  0872               	movf	??_myInterruptHanlder+2,w
   451  002F  008A               	movwf	10
   452  0030  0E71               	swapf	(??_myInterruptHanlder+1)^(0+4294967168),w
   453  0031  0083               	movwf	3
   454  0032  0EFE               	swapf	btemp,f
   455  0033  0E7E               	swapf	btemp,w
   456  0034  0009               	retfie
   457  0035                     __end_of_myInterruptHanlder:
   458  007E                     btemp	set	126	;btemp
   459  007E                     wtemp0	set	126
   460                           
   461                           	psect	intentry
   462  0004                     __pintentry:	
   463                           ;incstack = 0
   464                           ; Regs used in _myInterruptHanlder: [wreg+status,2+status,0]
   465                           
   466  0004                     interrupt_function:
   467  007E                     saved_w	set	btemp
   468  0004  00FE               	movwf	btemp
   469  0005  0E03               	swapf	3,w
   470  0006  00F1               	movwf	??_myInterruptHanlder+1
   471  0007  080A               	movf	10,w
   472  0008  00F2               	movwf	??_myInterruptHanlder+2
   473  0009  120A  118A  2814   	ljmp	_myInterruptHanlder
   474                           
   475                           	psect	config
   476                           
   477                           ;Config register CONFIG @ 0x2007
   478                           ;	Oscillator Selection bits
   479                           ;	FOSC = XT, XT oscillator
   480                           ;	Watchdog Timer Enable bit
   481                           ;	WDTE = OFF, WDT disabled
   482                           ;	Power-up Timer Enable bit
   483                           ;	PWRTE = OFF, PWRT disabled
   484                           ;	Brown-out Reset Enable bit
   485                           ;	BOREN = OFF, BOR disabled
   486                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   487                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   488                           ;	Data EEPROM Memory Code Protection bit
   489                           ;	CPD = OFF, Data EEPROM code protection off
   490                           ;	Flash Program Memory Write Enable bits
   491                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   492                           ;	In-Circuit Debugger Mode bit
   493                           ;	DEBUG = 0x1, unprogrammed default
   494                           ;	Flash Program Memory Code Protection bit
   495                           ;	CP = OFF, Code protection off
   496  2007                     	org	8199
   497  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupTimer

Critical Paths under _myInterruptHanlder in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterruptHanlder in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterruptHanlder in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myInterruptHanlder in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterruptHanlder in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _setupTimer
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myInterruptHanlder                                   3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupTimer

 _myInterruptHanlder (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 23 20:28:02 2020

                         l40 0057                           l27 0046                           l28 0046  
                        l632 004A                          l640 0035                          l634 004F  
                        l642 003B                          l636 0055                          l644 0040  
                        l638 0056                         i1l37 002E                         _TMR1 000E  
                       u1_20 001A                         u1_21 0019                         u2_20 0024  
                       u2_21 0023                         _main 0035                         btemp 007E  
                       start 000C                        ?_main 0070                        _T1CON 0010  
                      i1l650 0024                        i1l652 0025                        i1l654 0029  
                      i1l646 0014                        i1l656 002D                        i1l648 001A  
                      _PORTB 0006                        _TRISB 0086                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 000F  
               __end_of_main 004A                       ??_main 0074                       _TMR1IF 0060  
 __end_of_myInterruptHanlder 0035                       saved_w 007E      __end_of__initialization 0010  
             __pcstackCOMMON 0070                   __pmaintext 0035                   __pintentry 0004  
                    __ptext1 004A                      __ptext2 0014                    _T1CONbits 0010  
                    _counter 0074         end_of_initialization 0010                   _setupTimer 004A  
         _myInterruptHanlder 0014          ?_myInterruptHanlder 0070         ??_myInterruptHanlder 0070  
        start_initialization 000F                  ?_setupTimer 0070                  __pbssCOMMON 0074  
                  ___latbits 0002            interrupt_function 0004          __size_of_setupTimer 000E  
                   _PIE1bits 008C                     _PIR1bits 000C                __size_of_main 0015  
               ??_setupTimer 0073  __size_of_myInterruptHanlder 0021                   _INTCONbits 000B  
                   intlevel1 0000           __end_of_setupTimer 0058  
