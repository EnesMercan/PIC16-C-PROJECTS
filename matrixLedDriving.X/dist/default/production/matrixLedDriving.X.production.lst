

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 23 13:39:47 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataCOMMON
   172  0737                     __pidataCOMMON:
   173                           
   174                           ;initializer for _message
   175  0737  3400               	retlw	0
   176  0738  3401               	retlw	1
   177  0739  3400               	retlw	0
   178  073A  3402               	retlw	2
   179                           
   180                           	psect	idataBANK0
   181  073B                     __pidataBANK0:
   182                           
   183                           ;initializer for _letter
   184  073B  3400               	retlw	0
   185  073C  3436               	retlw	54
   186  073D  3436               	retlw	54
   187  073E  3436               	retlw	54
   188  073F  343E               	retlw	62
   189  0740  3441               	retlw	65
   190  0741  347B               	retlw	123
   191  0742  3477               	retlw	119
   192  0743  346F               	retlw	111
   193  0744  3441               	retlw	65
   194  0745  3430               	retlw	48
   195  0746  3436               	retlw	54
   196  0747  3436               	retlw	54
   197  0748  3436               	retlw	54
   198  0749  3406               	retlw	6
   199  0006                     _PORTB	set	6
   200  0007                     _PORTC	set	7
   201  0087                     _TRISC	set	135
   202  0086                     _TRISB	set	134
   203                           
   204                           	psect	cinit
   205  07D6                     start_initialization:	
   206                           ; #config settings
   207                           
   208  07D6                     __initialization:
   209                           
   210                           ; Initialize objects allocated to BANK0
   211  07D6  1383               	bcf	3,7	;select IRP bank0
   212  07D7  302F               	movlw	low (__pdataBANK0+15)
   213  07D8  00FD               	movwf	btemp+-1
   214  07D9  3007               	movlw	high __pidataBANK0
   215  07DA  00FE               	movwf	btemp
   216  07DB  303B               	movlw	low __pidataBANK0
   217  07DC  00FF               	movwf	btemp+1
   218  07DD  3020               	movlw	low __pdataBANK0
   219  07DE  0084               	movwf	4
   220  07DF  120A  118A  274E  120A  118A  	fcall	init_ram0
   221                           
   222                           ; Initialize objects allocated to COMMON
   223  07E4  120A  118A  2737  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   224  07E9  00FA               	movwf	__pdataCOMMON& (0+127)
   225  07EA  120A  118A  2738  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   226  07EF  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   227  07F0  120A  118A  2739  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   228  07F5  00FC               	movwf	(__pdataCOMMON+2)& (0+127)
   229  07F6  120A  118A  273A  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   230  07FB  00FD               	movwf	(__pdataCOMMON+3)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2F72   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	dataCOMMON
   239  007A                     __pdataCOMMON:
   240  007A                     _message:
   241  007A                     	ds	4
   242                           
   243                           	psect	dataBANK0
   244  0020                     __pdataBANK0:
   245  0020                     _letter:
   246  0020                     	ds	15
   247                           
   248                           	psect	inittext
   249  074A                     init_fetch0:	
   250                           ;	Called with low address in FSR and high address in W
   251                           
   252  074A  087E               	movf	btemp,w
   253  074B  008A               	movwf	10
   254  074C  087F               	movf	btemp+1,w
   255  074D  0082               	movwf	2
   256  074E                     init_ram0:	
   257                           ;Called with:
   258                           ;	high address of idata address in btemp 
   259                           ;	low address of idata address in btemp+1 
   260                           ;	low address of data in FSR
   261                           ;	high address + 1 of data in btemp-1
   262                           
   263  074E  120A  118A  274A  120A  118A  	fcall	init_fetch0
   264  0753  0080               	movwf	0
   265  0754  0A84               	incf	4,f
   266  0755  0804               	movf	4,w
   267  0756  067D               	xorwf	btemp+-1,w
   268  0757  1903               	btfsc	3,2
   269  0758  3400               	retlw	0
   270  0759  0AFF               	incf	btemp+1,f
   271  075A  1903               	btfsc	3,2
   272  075B  0AFE               	incf	btemp,f
   273  075C  2F4E               	goto	init_ram0
   274                           
   275                           	psect	cstackCOMMON
   276  0070                     __pcstackCOMMON:
   277  0070                     ?_main:
   278  0070                     ?___bmul:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ___bmul@multiplicand:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286  0070                     	ds	1
   287  0071                     ??___bmul:
   288                           
   289                           ; 1 bytes @ 0x1
   290  0071                     	ds	1
   291  0072                     ___bmul@product:
   292                           
   293                           ; 1 bytes @ 0x2
   294  0072                     	ds	1
   295  0073                     ___bmul@multiplier:
   296                           
   297                           ; 1 bytes @ 0x3
   298  0073                     	ds	1
   299  0074                     ??_main:
   300                           
   301                           ; 1 bytes @ 0x4
   302  0074                     	ds	3
   303  0077                     main@repeat:
   304                           
   305                           ; 1 bytes @ 0x7
   306  0077                     	ds	1
   307  0078                     main@letterIndex:
   308                           
   309                           ; 1 bytes @ 0x8
   310  0078                     	ds	1
   311  0079                     main@i:
   312                           
   313                           ; 1 bytes @ 0x9
   314  0079                     	ds	1
   315                           
   316                           	psect	maintext
   317  0772                     __pmaintext:	
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 78 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  i               1    9[COMMON] char 
   328 ;;  repeat          1    7[COMMON] char 
   329 ;;  letterIndex     1    8[COMMON] char 
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : B00/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   339 ;;      Params:         0       0       0       0       0
   340 ;;      Locals:         3       0       0       0       0
   341 ;;      Temps:          3       0       0       0       0
   342 ;;      Totals:         6       0       0       0       0
   343 ;;Total ram usage:        6 bytes
   344 ;; Hardware stack levels required when called:    1
   345 ;; This function calls:
   346 ;;		___bmul
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _main
   354  0772                     _main:
   355  0772                     l692:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   358                           
   359                           
   360                           ;main.c: 80:     TRISB = 0;
   361  0772  1683               	bsf	3,5	;RP0=1, select bank1
   362  0773  1303               	bcf	3,6	;RP1=0, select bank1
   363  0774  0186               	clrf	6	;volatile
   364                           
   365                           ;main.c: 81:     TRISC = 0;
   366  0775  0187               	clrf	7	;volatile
   367  0776                     l19:	
   368                           ;main.c: 83:     while (1)
   369                           
   370                           
   371                           ;main.c: 84:     {;main.c: 85:         for (int8_t letterIndex = 0; letterIndex<4; lette
      +                          rIndex++)
   372  0776  01F8               	clrf	main@letterIndex
   373  0777                     l698:
   374                           
   375                           ;main.c: 86:         {;main.c: 87:             for (int8_t repeat = 0; repeat<55; repeat
      +                          ++)
   376  0777  01F7               	clrf	main@repeat
   377  0778                     l704:
   378                           
   379                           ;main.c: 88:             {;main.c: 89:                 PORTC = 1;
   380  0778  3001               	movlw	1
   381  0779  1283               	bcf	3,5	;RP0=0, select bank0
   382  077A  1303               	bcf	3,6	;RP1=0, select bank0
   383  077B  0087               	movwf	7	;volatile
   384  077C                     l706:
   385                           
   386                           ;main.c: 91:                 for (int8_t i = 0; i<5; i++)
   387  077C  01F9               	clrf	main@i
   388  077D                     l712:
   389                           
   390                           ;main.c: 92:                 {;main.c: 93:                     PORTB = letter[message[le
      +                          tterIndex]][i];
   391  077D  3005               	movlw	5
   392  077E  00F4               	movwf	??_main
   393  077F  0874               	movf	??_main,w
   394  0780  00F0               	movwf	___bmul@multiplicand
   395  0781  0878               	movf	main@letterIndex,w
   396  0782  3E7A               	addlw	(low (_message| 0))& (0+255)
   397  0783  0084               	movwf	4
   398  0784  0800               	movf	0,w
   399  0785  120A  118A  275D  120A  118A  	fcall	___bmul
   400  078A  3E20               	addlw	(low (_letter| 0))& (0+255)
   401  078B  0779               	addwf	main@i,w
   402  078C  00F5               	movwf	??_main+1
   403  078D  0875               	movf	??_main+1,w
   404  078E  0084               	movwf	4
   405  078F  1383               	bcf	3,7	;select IRP bank0
   406  0790  0800               	movf	0,w
   407  0791  1283               	bcf	3,5	;RP0=0, select bank0
   408  0792  1303               	bcf	3,6	;RP1=0, select bank0
   409  0793  0086               	movwf	6	;volatile
   410  0794                     l714:
   411                           
   412                           ;main.c: 94:                     _delay((unsigned long)((5)*(4000000/4000.0)));
   413  0794  3007               	movlw	7
   414  0795  00F5               	movwf	??_main+1
   415  0796  307D               	movlw	125
   416  0797  00F4               	movwf	??_main
   417  0798                     u117:
   418  0798  0BF4               	decfsz	??_main,f
   419  0799  2F98               	goto	u117
   420  079A  0BF5               	decfsz	??_main+1,f
   421  079B  2F98               	goto	u117
   422  079C                     l716:
   423                           
   424                           ;main.c: 96:                     PORTC = (PORTC << 1);
   425  079C  1283               	bcf	3,5	;RP0=0, select bank0
   426  079D  1303               	bcf	3,6	;RP1=0, select bank0
   427  079E  0807               	movf	7,w	;volatile
   428  079F  00F4               	movwf	??_main
   429  07A0  0774               	addwf	??_main,w
   430  07A1  0087               	movwf	7	;volatile
   431  07A2                     l718:
   432                           
   433                           ;main.c: 97:                 }
   434  07A2  3001               	movlw	1
   435  07A3  00F4               	movwf	??_main
   436  07A4  0874               	movf	??_main,w
   437  07A5  07F9               	addwf	main@i,f
   438  07A6                     l720:
   439  07A6  0879               	movf	main@i,w
   440  07A7  3A80               	xorlw	128
   441  07A8  3E7B               	addlw	-133
   442  07A9  1C03               	skipc
   443  07AA  2FAC               	goto	u81
   444  07AB  2FAD               	goto	u80
   445  07AC                     u81:
   446  07AC  2F7D               	goto	l712
   447  07AD                     u80:
   448  07AD                     l722:
   449                           
   450                           ;main.c: 99:             }
   451  07AD  3001               	movlw	1
   452  07AE  00F4               	movwf	??_main
   453  07AF  0874               	movf	??_main,w
   454  07B0  07F7               	addwf	main@repeat,f
   455  07B1                     l724:
   456  07B1  0877               	movf	main@repeat,w
   457  07B2  3A80               	xorlw	128
   458  07B3  3E49               	addlw	-183
   459  07B4  1C03               	skipc
   460  07B5  2FB7               	goto	u91
   461  07B6  2FB8               	goto	u90
   462  07B7                     u91:
   463  07B7  2F78               	goto	l704
   464  07B8                     u90:
   465  07B8                     l726:
   466                           
   467                           ;main.c: 101:             PORTC = 0;
   468  07B8  0187               	clrf	7	;volatile
   469  07B9                     l728:
   470                           
   471                           ;main.c: 102:             PORTB = 1;
   472  07B9  3001               	movlw	1
   473  07BA  0086               	movwf	6	;volatile
   474  07BB                     l730:
   475                           
   476                           ;main.c: 103:             _delay((unsigned long)((300)*(4000000/4000.0)));
   477  07BB  3002               	movlw	2
   478  07BC  00F6               	movwf	??_main+2
   479  07BD  3086               	movlw	134
   480  07BE  00F5               	movwf	??_main+1
   481  07BF  3099               	movlw	153
   482  07C0  00F4               	movwf	??_main
   483  07C1                     u127:
   484  07C1  0BF4               	decfsz	??_main,f
   485  07C2  2FC1               	goto	u127
   486  07C3  0BF5               	decfsz	??_main+1,f
   487  07C4  2FC1               	goto	u127
   488  07C5  0BF6               	decfsz	??_main+2,f
   489  07C6  2FC1               	goto	u127
   490  07C7                     l732:
   491                           
   492                           ;main.c: 104:         }
   493  07C7  3001               	movlw	1
   494  07C8  00F4               	movwf	??_main
   495  07C9  0874               	movf	??_main,w
   496  07CA  07F8               	addwf	main@letterIndex,f
   497  07CB                     l734:
   498  07CB  0878               	movf	main@letterIndex,w
   499  07CC  3A80               	xorlw	128
   500  07CD  3E7C               	addlw	-132
   501  07CE  1C03               	skipc
   502  07CF  2FD1               	goto	u101
   503  07D0  2FD2               	goto	u100
   504  07D1                     u101:
   505  07D1  2F77               	goto	l698
   506  07D2                     u100:
   507  07D2  2F76               	goto	l19
   508  07D3  120A  118A  2800   	ljmp	start
   509  07D6                     __end_of_main:
   510                           
   511                           	psect	text1
   512  075D                     __ptext1:	
   513 ;; *************** function ___bmul *****************
   514 ;; Defined at:
   515 ;;		line 4 in file "/Applications/microchip/xc8/v2.20/pic/sources/c90/common/Umul8.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  multiplier      1    wreg     unsigned char 
   518 ;;  multiplicand    1    0[COMMON] unsigned char 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  multiplier      1    3[COMMON] unsigned char 
   521 ;;  product         1    2[COMMON] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      unsigned char 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         1       0       0       0       0
   532 ;;      Locals:         2       0       0       0       0
   533 ;;      Temps:          1       0       0       0       0
   534 ;;      Totals:         4       0       0       0       0
   535 ;;Total ram usage:        4 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function ___bmul
   546  075D                     ___bmul:
   547                           
   548                           ;incstack = 0
   549                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   550                           ;___bmul@multiplier stored from wreg
   551  075D  00F3               	movwf	___bmul@multiplier
   552  075E                     l678:
   553  075E  01F2               	clrf	___bmul@product
   554  075F                     l680:
   555  075F  1C73               	btfss	___bmul@multiplier,0
   556  0760  2F62               	goto	u61
   557  0761  2F63               	goto	u60
   558  0762                     u61:
   559  0762  2F67               	goto	l684
   560  0763                     u60:
   561  0763                     l682:
   562  0763  0870               	movf	___bmul@multiplicand,w
   563  0764  00F1               	movwf	??___bmul
   564  0765  0871               	movf	??___bmul,w
   565  0766  07F2               	addwf	___bmul@product,f
   566  0767                     l684:
   567  0767  1003               	clrc
   568  0768  0DF0               	rlf	___bmul@multiplicand,f
   569  0769                     l686:
   570  0769  1003               	clrc
   571  076A  0CF3               	rrf	___bmul@multiplier,f
   572  076B  0873               	movf	___bmul@multiplier,w
   573  076C  1D03               	btfss	3,2
   574  076D  2F6F               	goto	u71
   575  076E  2F70               	goto	u70
   576  076F                     u71:
   577  076F  2F5F               	goto	l680
   578  0770                     u70:
   579  0770                     l688:
   580  0770  0872               	movf	___bmul@product,w
   581  0771                     l140:
   582  0771  0008               	return
   583  0772                     __end_of___bmul:
   584  007E                     btemp	set	126	;btemp
   585  007E                     wtemp0	set	126
   586                           
   587                           	psect	config
   588                           
   589                           ;Config register CONFIG @ 0x2007
   590                           ;	Oscillator Selection bits
   591                           ;	FOSC = XT, XT oscillator
   592                           ;	Watchdog Timer Enable bit
   593                           ;	WDTE = OFF, WDT disabled
   594                           ;	Power-up Timer Enable bit
   595                           ;	PWRTE = OFF, PWRT disabled
   596                           ;	Brown-out Reset Enable bit
   597                           ;	BOREN = OFF, BOR disabled
   598                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   599                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   600                           ;	Data EEPROM Memory Code Protection bit
   601                           ;	CPD = OFF, Data EEPROM code protection off
   602                           ;	Flash Program Memory Write Enable bits
   603                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   604                           ;	In-Circuit Debugger Mode bit
   605                           ;	DEBUG = 0x1, unprogrammed default
   606                           ;	Flash Program Memory Code Protection bit
   607                           ;	CP = OFF, Code protection off
   608  2007                     	org	8199
   609  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     300
                                              4 COMMON     6     6      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 23 13:39:47 2020

                      pc 0002           ___bmul@product 0072                       l19 0776  
                     u60 0763                       u61 0762                       u70 0770  
                     u71 076F                       u80 07AD                       u81 07AC  
                     u90 07B8                       u91 07B7                       fsr 0004  
                    l140 0771                      l720 07A6                      l712 077D  
                    l704 0778                      l730 07BB                      l722 07AD  
                    l714 0794                      l706 077C                      l732 07C7  
                    l724 07B1                      l716 079C                      l734 07CB  
                    l726 07B8                      l718 07A2                      l680 075F  
                    l728 07B9                      l682 0763                      l684 0767  
                    l692 0772                      l686 0769                      l678 075E  
                    l688 0770                      l698 0777                      u100 07D2  
                    u101 07D1                      u117 0798                      u127 07C1  
                    fsr0 0004                      indf 0000                     _main 0772  
                   btemp 007E                     start 0000        ___bmul@multiplier 0073  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    main@i 0079  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07D6             __end_of_main 07D6                   ??_main 0074  
                 ___bmul 075D                   _letter 0020             __pdataCOMMON 007A  
__end_of__initialization 07FC      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
           __pidataBANK0 073B               __pmaintext 0772                  ?___bmul 0070  
        __size_of___bmul 0015                  __ptext1 075D                  _message 007A  
   end_of_initialization 07FC               main@repeat 0077           __end_of___bmul 0772  
          __pidataCOMMON 0737      start_initialization 07D6                 ??___bmul 0071  
             init_fetch0 074A              __pdataBANK0 0020                ___latbits 0002  
        main@letterIndex 0078            __size_of_main 0064                 init_ram0 074E  
