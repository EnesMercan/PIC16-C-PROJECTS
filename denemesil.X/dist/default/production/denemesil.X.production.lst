

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Dec 27 16:34:30 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0017                     _CCP1CONbits	set	23
   171  0015                     _CCPR1L	set	21
   172  000B                     _INTCONbits	set	11
   173  0006                     _PORTB	set	6
   174  0007                     _PORTC	set	7
   175  0058                     _RBIF	set	88
   176  0034                     _RB4	set	52
   177  0035                     _RB5	set	53
   178  0036                     _RB6	set	54
   179  0092                     _TMR2ON	set	146
   180  00BA                     _CCP1M2	set	186
   181  00BB                     _CCP1M3	set	187
   182  0090                     _T2CKPS0	set	144
   183  0091                     _T2CKPS1	set	145
   184  0093                     _TOUTPS0	set	147
   185  0094                     _TOUTPS1	set	148
   186  0095                     _TOUTPS2	set	149
   187  0096                     _TOUTPS3	set	150
   188  005E                     _PEIE	set	94
   189  005F                     _GIE	set	95
   190  0092                     _PR2	set	146
   191  0087                     _TRISC	set	135
   192  0086                     _TRISB	set	134
   193                           
   194                           	psect	cinit
   195  000F                     start_initialization:	
   196                           ; #config settings
   197                           
   198  000F                     __initialization:
   199  000F                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  000F                     __end_of__initialization:
   203  000F  0183               	clrf	3
   204  0010  120A  118A  2844   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	cstackCOMMON
   207  0070                     __pcstackCOMMON:
   208  0070                     ?_servoMiddle:
   209  0070                     ?_servoLeft:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ??_servoLeft:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_servoRight:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ??_servoRight:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_main:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_myIntHandler:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ??_myIntHandler:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?i1_servoMiddle:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ??i1_servoMiddle:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238  0070                     	ds	3
   239  0073                     ??_servoMiddle:
   240  0073                     ??_main:	
   241                           ; 1 bytes @ 0x3
   242                           
   243                           
   244                           	psect	maintext
   245  0044                     __pmaintext:	
   246                           ; 1 bytes @ 0x3
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   249 ;;
   250 ;; *************** function _main *****************
   251 ;; Defined at:
   252 ;;		line 21 in file "main.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, pclath, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : B00/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   266 ;;      Params:         0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0
   269 ;;      Totals:         0       0       0       0       0
   270 ;;Total ram usage:        0 bytes
   271 ;; Hardware stack levels required when called:    3
   272 ;; This function calls:
   273 ;;		_servoMiddle
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           
   280                           ;psect for function _main
   281  0044                     _main:
   282  0044                     l698:	
   283                           ;incstack = 0
   284                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   285                           
   286                           
   287                           ;main.c: 23:     PORTC = 1;
   288  0044  3001               	movlw	1
   289  0045  1283               	bcf	3,5	;RP0=0, select bank0
   290  0046  1303               	bcf	3,6	;RP1=0, select bank0
   291  0047  0087               	movwf	7	;volatile
   292  0048                     l700:
   293                           
   294                           ;main.c: 24:     PORTB = 0;
   295  0048  0186               	clrf	6	;volatile
   296  0049                     l702:
   297                           
   298                           ;main.c: 25:     TRISB = 0b01110000;
   299  0049  3070               	movlw	112
   300  004A  1683               	bsf	3,5	;RP0=1, select bank1
   301  004B  1303               	bcf	3,6	;RP1=0, select bank1
   302  004C  0086               	movwf	6	;volatile
   303                           
   304                           ;main.c: 26:     TRISC = 0;
   305  004D  0187               	clrf	7	;volatile
   306  004E                     l704:
   307                           
   308                           ;main.c: 28:     GIE = 1;
   309  004E  178B               	bsf	11,7	;volatile
   310  004F                     l706:
   311                           
   312                           ;main.c: 29:     PEIE = 1;
   313  004F  170B               	bsf	11,6	;volatile
   314  0050                     l708:
   315                           
   316                           ;main.c: 31:     INTCONbits.RBIF = 0;
   317  0050  100B               	bcf	11,0	;volatile
   318  0051                     l710:
   319                           
   320                           ;main.c: 32:     INTCONbits.RBIE = 1;
   321  0051  158B               	bsf	11,3	;volatile
   322  0052                     l712:
   323                           
   324                           ;main.c: 34:     servoMiddle();
   325  0052  120A  118A  2066  120A  118A  	fcall	_servoMiddle
   326  0057                     l714:
   327                           
   328                           ;main.c: 37:     TOUTPS3 = 0;
   329  0057  1283               	bcf	3,5	;RP0=0, select bank0
   330  0058  1303               	bcf	3,6	;RP1=0, select bank0
   331  0059  1312               	bcf	18,6	;volatile
   332  005A                     l716:
   333                           
   334                           ;main.c: 38:     TOUTPS2 = 1;
   335  005A  1692               	bsf	18,5	;volatile
   336  005B                     l718:
   337                           
   338                           ;main.c: 39:     TOUTPS1 = 1;
   339  005B  1612               	bsf	18,4	;volatile
   340  005C                     l720:
   341                           
   342                           ;main.c: 40:     TOUTPS0 = 1;
   343  005C  1592               	bsf	18,3	;volatile
   344  005D                     l722:
   345                           
   346                           ;main.c: 43:     T2CKPS1 = 1;
   347  005D  1492               	bsf	18,1	;volatile
   348  005E                     l724:
   349                           
   350                           ;main.c: 44:     T2CKPS0 = 1;
   351  005E  1412               	bsf	18,0	;volatile
   352  005F                     l726:
   353                           
   354                           ;main.c: 47:     CCP1M3 = 1;
   355  005F  1597               	bsf	23,3	;volatile
   356  0060                     l728:
   357                           
   358                           ;main.c: 48:     CCP1M2 = 1;
   359  0060  1517               	bsf	23,2	;volatile
   360  0061                     l730:
   361                           
   362                           ;main.c: 50:     TMR2ON = 1;
   363  0061  1512               	bsf	18,2	;volatile
   364  0062                     l57:	
   365                           ;main.c: 52:     while (1)
   366                           
   367  0062                     l58:	
   368                           ;main.c: 53:     {;main.c: 55:     }
   369                           
   370  0062  2862               	goto	l57
   371  0063  120A  118A  280C   	ljmp	start
   372  0066                     __end_of_main:
   373                           
   374                           	psect	text1
   375  0066                     __ptext1:	
   376 ;; *************** function _servoMiddle *****************
   377 ;; Defined at:
   378 ;;		line 95 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0
   395 ;;      Totals:         0       0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used:    1
   398 ;; Hardware stack levels required when called:    2
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _servoMiddle
   408  0066                     _servoMiddle:
   409  0066                     l672:	
   410                           ;incstack = 0
   411                           ; Regs used in _servoMiddle: [wreg]
   412                           
   413                           
   414                           ;main.c: 97:     PR2 = 199;
   415  0066  30C7               	movlw	199
   416  0067  1683               	bsf	3,5	;RP0=1, select bank1
   417  0068  1303               	bcf	3,6	;RP1=0, select bank1
   418  0069  0092               	movwf	18	;volatile
   419                           
   420                           ;main.c: 98:     CCPR1L = 3;
   421  006A  3003               	movlw	3
   422  006B  1283               	bcf	3,5	;RP0=0, select bank0
   423  006C  1303               	bcf	3,6	;RP1=0, select bank0
   424  006D  0095               	movwf	21	;volatile
   425  006E                     l674:
   426                           
   427                           ;main.c: 99:     CCP1CONbits.CCP1X = 1;
   428  006E  1697               	bsf	23,5	;volatile
   429  006F                     l676:
   430                           
   431                           ;main.c: 100:     CCP1CONbits.CCP1Y = 0;
   432  006F  1217               	bcf	23,4	;volatile
   433  0070                     l80:
   434  0070  0008               	return
   435  0071                     __end_of_servoMiddle:
   436                           
   437                           	psect	text2
   438  0013                     __ptext2:	
   439 ;; *************** function _myIntHandler *****************
   440 ;; Defined at:
   441 ;;		line 61 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, pclath, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          3       0       0       0       0
   458 ;;      Totals:         3       0       0       0       0
   459 ;;Total ram usage:        3 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; Hardware stack levels required when called:    1
   462 ;; This function calls:
   463 ;;		_servoLeft
   464 ;;		_servoRight
   465 ;;		i1_servoMiddle
   466 ;; This function is called by:
   467 ;;		Interrupt level 1
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _myIntHandler
   473  0013                     _myIntHandler:
   474  0013                     i1l732:
   475                           
   476                           ;main.c: 64:     if (INTCONbits.RBIF)
   477  0013  1C0B               	btfss	11,0	;volatile
   478  0014  2816               	goto	u1_21
   479  0015  2817               	goto	u1_20
   480  0016                     u1_21:
   481  0016  283D               	goto	i1l71
   482  0017                     u1_20:
   483  0017                     i1l734:
   484                           
   485                           ;main.c: 65:     {;main.c: 66:         if (RB6)
   486  0017  1283               	bcf	3,5	;RP0=0, select bank0
   487  0018  1303               	bcf	3,6	;RP1=0, select bank0
   488  0019  1F06               	btfss	6,6	;volatile
   489  001A  281C               	goto	u2_21
   490  001B  281D               	goto	u2_20
   491  001C                     u2_21:
   492  001C  2823               	goto	i1l66
   493  001D                     u2_20:
   494  001D                     i1l736:
   495                           
   496                           ;main.c: 67:             servoLeft();
   497  001D  120A  118A  2087  120A  118A  	fcall	_servoLeft
   498  0022  2836               	goto	i1l742
   499  0023                     i1l66:	
   500                           ;main.c: 68:         else if (RB5)
   501                           
   502  0023  1E86               	btfss	6,5	;volatile
   503  0024  2826               	goto	u3_21
   504  0025  2827               	goto	u3_20
   505  0026                     u3_21:
   506  0026  282D               	goto	i1l68
   507  0027                     u3_20:
   508  0027                     i1l738:
   509                           
   510                           ;main.c: 69:             servoMiddle();
   511  0027  120A  118A  2071  120A  118A  	fcall	i1_servoMiddle
   512  002C  2836               	goto	i1l742
   513  002D                     i1l68:	
   514                           ;main.c: 70:         else if (RB4)
   515                           
   516  002D  1E06               	btfss	6,4	;volatile
   517  002E  2830               	goto	u4_21
   518  002F  2831               	goto	u4_20
   519  0030                     u4_21:
   520  0030  2836               	goto	i1l742
   521  0031                     u4_20:
   522  0031                     i1l740:
   523                           
   524                           ;main.c: 71:             servoRight();
   525  0031  120A  118A  207C  120A  118A  	fcall	_servoRight
   526  0036                     i1l742:
   527                           
   528                           ;main.c: 75:         RBIF = 0;
   529  0036  100B               	bcf	11,0	;volatile
   530  0037                     i1l744:
   531                           
   532                           ;main.c: 77:         PORTC ^= 0x01;
   533  0037  3001               	movlw	1
   534  0038  00F0               	movwf	??_myIntHandler
   535  0039  0870               	movf	??_myIntHandler,w
   536  003A  1283               	bcf	3,5	;RP0=0, select bank0
   537  003B  1303               	bcf	3,6	;RP1=0, select bank0
   538  003C  0687               	xorwf	7,f	;volatile
   539  003D                     i1l71:
   540  003D  0872               	movf	??_myIntHandler+2,w
   541  003E  008A               	movwf	10
   542  003F  0E71               	swapf	(??_myIntHandler+1)^(0+4294967168),w
   543  0040  0083               	movwf	3
   544  0041  0EFE               	swapf	btemp,f
   545  0042  0E7E               	swapf	btemp,w
   546  0043  0009               	retfie
   547  0044                     __end_of_myIntHandler:
   548                           
   549                           	psect	intentry
   550  0004                     __pintentry:	
   551                           ;incstack = 0
   552                           ; Regs used in _myIntHandler: [wreg+status,2+status,0+pclath+cstack]
   553                           
   554  0004                     interrupt_function:
   555  007E                     saved_w	set	btemp
   556  0004  00FE               	movwf	btemp
   557  0005  0E03               	swapf	3,w
   558  0006  00F1               	movwf	??_myIntHandler+1
   559  0007  080A               	movf	10,w
   560  0008  00F2               	movwf	??_myIntHandler+2
   561  0009  120A  118A  2813   	ljmp	_myIntHandler
   562                           
   563                           	psect	text3
   564  0071                     __ptext3:	
   565 ;; *************** function i1_servoMiddle *****************
   566 ;; Defined at:
   567 ;;		line 95 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_myIntHandler
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function i1_servoMiddle
   596  0071                     i1_servoMiddle:
   597  0071                     i1l692:	
   598                           ;incstack = 0
   599                           ; Regs used in i1_servoMiddle: [wreg]
   600                           
   601                           
   602                           ;main.c: 97:     PR2 = 199;
   603  0071  30C7               	movlw	199
   604  0072  1683               	bsf	3,5	;RP0=1, select bank1
   605  0073  1303               	bcf	3,6	;RP1=0, select bank1
   606  0074  0092               	movwf	18	;volatile
   607                           
   608                           ;main.c: 98:     CCPR1L = 3;
   609  0075  3003               	movlw	3
   610  0076  1283               	bcf	3,5	;RP0=0, select bank0
   611  0077  1303               	bcf	3,6	;RP1=0, select bank0
   612  0078  0095               	movwf	21	;volatile
   613  0079                     i1l694:
   614                           
   615                           ;main.c: 99:     CCP1CONbits.CCP1X = 1;
   616  0079  1697               	bsf	23,5	;volatile
   617  007A                     i1l696:
   618                           
   619                           ;main.c: 100:     CCP1CONbits.CCP1Y = 0;
   620  007A  1217               	bcf	23,4	;volatile
   621  007B                     i1l80:
   622  007B  0008               	return
   623  007C                     __end_ofi1_servoMiddle:
   624                           
   625                           	psect	text4
   626  007C                     __ptext4:	
   627 ;; *************** function _servoRight *****************
   628 ;; Defined at:
   629 ;;		line 88 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_myIntHandler
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _servoRight
   658  007C                     _servoRight:
   659  007C                     i1l686:	
   660                           ;incstack = 0
   661                           ; Regs used in _servoRight: [wreg]
   662                           
   663                           
   664                           ;main.c: 90:     PR2 = 199;
   665  007C  30C7               	movlw	199
   666  007D  1683               	bsf	3,5	;RP0=1, select bank1
   667  007E  1303               	bcf	3,6	;RP1=0, select bank1
   668  007F  0092               	movwf	18	;volatile
   669                           
   670                           ;main.c: 91:     CCPR1L = 18;
   671  0080  3012               	movlw	18
   672  0081  1283               	bcf	3,5	;RP0=0, select bank0
   673  0082  1303               	bcf	3,6	;RP1=0, select bank0
   674  0083  0095               	movwf	21	;volatile
   675  0084                     i1l688:
   676                           
   677                           ;main.c: 92:     CCP1CONbits.CCP1X = 0;
   678  0084  1297               	bcf	23,5	;volatile
   679  0085                     i1l690:
   680                           
   681                           ;main.c: 93:     CCP1CONbits.CCP1Y = 0;
   682  0085  1217               	bcf	23,4	;volatile
   683  0086                     i1l77:
   684  0086  0008               	return
   685  0087                     __end_of_servoRight:
   686                           
   687                           	psect	text5
   688  0087                     __ptext5:	
   689 ;; *************** function _servoLeft *****************
   690 ;; Defined at:
   691 ;;		line 81 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_myIntHandler
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _servoLeft
   720  0087                     _servoLeft:
   721  0087                     i1l678:	
   722                           ;incstack = 0
   723                           ; Regs used in _servoLeft: [wreg+status,2]
   724                           
   725                           
   726                           ;main.c: 83:     PR2 = 199;
   727  0087  30C7               	movlw	199
   728  0088  1683               	bsf	3,5	;RP0=1, select bank1
   729  0089  1303               	bcf	3,6	;RP1=0, select bank1
   730  008A  0092               	movwf	18	;volatile
   731  008B                     i1l680:
   732                           
   733                           ;main.c: 84:     CCPR1L = 0;
   734  008B  1283               	bcf	3,5	;RP0=0, select bank0
   735  008C  1303               	bcf	3,6	;RP1=0, select bank0
   736  008D  0195               	clrf	21	;volatile
   737  008E                     i1l682:
   738                           
   739                           ;main.c: 85:     CCP1CONbits.CCP1X = 1;
   740  008E  1697               	bsf	23,5	;volatile
   741  008F                     i1l684:
   742                           
   743                           ;main.c: 86:     CCP1CONbits.CCP1Y = 0;
   744  008F  1217               	bcf	23,4	;volatile
   745  0090                     i1l74:
   746  0090  0008               	return
   747  0091                     __end_of_servoLeft:
   748  007E                     btemp	set	126	;btemp
   749  007E                     wtemp0	set	126
   750                           
   751                           	psect	config
   752                           
   753                           ;Config register CONFIG @ 0x2007
   754                           ;	Oscillator Selection bits
   755                           ;	FOSC = XT, XT oscillator
   756                           ;	Watchdog Timer Enable bit
   757                           ;	WDTE = OFF, WDT disabled
   758                           ;	Power-up Timer Enable bit
   759                           ;	PWRTE = OFF, PWRT disabled
   760                           ;	Brown-out Reset Enable bit
   761                           ;	BOREN = ON, BOR enabled
   762                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   763                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   764                           ;	Data EEPROM Memory Code Protection bit
   765                           ;	CPD = OFF, Data EEPROM code protection off
   766                           ;	Flash Program Memory Write Enable bits
   767                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   768                           ;	In-Circuit Debugger Mode bit
   769                           ;	DEBUG = 0x1, unprogrammed default
   770                           ;	Flash Program Memory Code Protection bit
   771                           ;	CP = OFF, Code protection off
   772  2007                     	org	8199
   773  2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIntHandler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIntHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIntHandler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIntHandler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIntHandler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _servoMiddle
 ---------------------------------------------------------------------------------
 (1) _servoMiddle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIntHandler                                         3     3      0       0
                                              0 COMMON     3     3      0
                          _servoLeft
                         _servoRight
                      i1_servoMiddle
 ---------------------------------------------------------------------------------
 (3) i1_servoMiddle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _servoRight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _servoLeft                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servoMiddle

 _myIntHandler (ROOT)
   _servoLeft
   _servoRight
   i1_servoMiddle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Dec 27 16:34:30 2020

                     l80 0070                       l57 0062                       l58 0062  
                    l700 0048                      l710 0051                      l702 0049  
                    l720 005C                      l712 0052                      l704 004E  
                    l730 0061                      l722 005D                      l714 0057  
                    l706 004F                      l724 005E                      l716 005A  
                    l708 0050                      l726 005F                      l718 005B  
                    l672 0066                      l728 0060                      l674 006E  
                    l676 006F                      l698 0044                      _GIE 005F  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _PR2 0092    __end_ofi1_servoMiddle 007C                     _PEIE 005E  
                   _RBIF 0058                     i1l71 003D                     i1l80 007B  
                   i1l74 0090                     i1l66 0023                     i1l68 002D  
                   i1l77 0086                     u1_20 0017                     u1_21 0016  
                   u2_20 001D                     u2_21 001C                     u3_20 0027  
                   u3_21 0026                     u4_20 0031                     u4_21 0030  
                   _main 0044                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l740 0031                    i1l732 0013  
                  i1l742 0036                    i1l734 0017                    i1l680 008B  
                  i1l744 0037                    i1l736 001D                    i1l682 008E  
                  i1l690 0085                    i1l738 0027                    i1l684 008F  
                  i1l692 0071                    i1l678 0087                    i1l686 007C  
                  i1l694 0079                    i1l688 0084                    i1l696 007A  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0066  
                 ??_main 0073                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCPR1L 0015                   _TMR2ON 0092            ?_myIntHandler 0070  
           ?_servoMiddle 0070                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070           ??_myIntHandler 0070               __pmaintext 0044  
             __pintentry 0004                  _T2CKPS0 0090                  _T2CKPS1 0091  
     __size_of_servoLeft 000A                  _TOUTPS0 0093                  _TOUTPS1 0094  
                _TOUTPS2 0095                  _TOUTPS3 0096   __size_ofi1_servoMiddle 000B  
                __ptext1 0066                  __ptext2 0013                  __ptext3 0071  
                __ptext4 007C                  __ptext5 0087     __size_of_servoMiddle 000B  
   end_of_initialization 000F     __end_of_myIntHandler 0044        __end_of_servoLeft 0091  
             _servoRight 007C            i1_servoMiddle 0071              _CCP1CONbits 0017  
         ?i1_servoMiddle 0070      start_initialization 000F              ?_servoRight 0070  
              ___latbits 0002    __size_of_myIntHandler 0031             _myIntHandler 0013  
        ??i1_servoMiddle 0070        interrupt_function 0004      __size_of_servoRight 000B  
              _servoLeft 0087            ??_servoMiddle 0073               ?_servoLeft 0070  
    __end_of_servoMiddle 0071            __size_of_main 0022             ??_servoRight 0070  
             _INTCONbits 000B                 intlevel1 0000       __end_of_servoRight 0087  
            ??_servoLeft 0070              _servoMiddle 0066  
