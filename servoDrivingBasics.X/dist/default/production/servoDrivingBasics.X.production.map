Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v2.20/pic/dat/en_msgs.txt -cn \
  -h+dist/default/production/servoDrivingBasics.X.production.sym \
  --cmf=dist/default/production/servoDrivingBasics.X.production.cmf -z \
  -Q16F84A -o/tmp/xcXJdNHyn --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/servoDrivingBasics.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=012h-04Dh -pstack=STACK \
  -ACODE=00h-03FFh -ASTRCODE=00h-03FFh -ASTRING=00h-0FFhx4 \
  -ACONST=00h-0FFhx4 -AENTRY=00h-0FFhx4 -ABANK0=0Ch-04Dh -ARAM=0Ch-04Dh \
  -AABS1=0Ch-04Fh -ACOMMON=04Eh-04Fh -ASFR0=00h-0Bh -ASFR1=080h-0CDh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-03Fh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k /tmp/xcMXRfZNb.o \
  dist/default/production/servoDrivingBasics.X.production.o 

Object code version is 3.11

Machine type is 16F84A



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcMXRfZNb.o
                end_init                              B        B        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1        0       4
dist/default/production/servoDrivingBasics.X.production.o
                cinit                                 C        C        4        8       0
                intentry                              4        4        7        8       0
                config                             2007     2007        1        0       4
                text1                               125      125       26        8       0
                maintext                             10       10      115        8       0
                cstackBANK0                           C        C        5        C       1
                bssBANK0                             11       11        1        C       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              B        B        1         0
                cinit                                 C        C        4         0
                intentry                              4        4        7         0
                reset_vec                             0        0        1         0
                text1                               125      125       26         0
                maintext                             10       10      115         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   BANK0          
                cstackBANK0                           C        C        5         1
                bssBANK0                             11       11        1         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               4E       4E        2         1

        CLASS   COMMON         

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK1          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                cstackBANK0                    00000C  000006  000012         C       1  BANK0       1
                intentry                       000004  000147  00014B         8       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0012-004D             3C           1
        CODE             0001-0003              3           2
                         014B-03FF            2B5
        CONST            0001-0003              3           2
                         014B-03FF            100
        EEDATA           2100-213F             40           2
        ENTRY            0001-0003              3           2
                         014B-03FF            100
        IDLOC            2000-2003              4           2
        RAM              0012-004D             3C           1
        SFR0             0000-000B              C           1
        SFR1             0080-00CD             4E           1
        STACK            0012-004D             3C           1
        STRCODE          0001-0003              3           2
                         014B-03FF            2B5
        STRING           0001-0003              3           2
                         014B-03FF            100

                                  Symbol Table

_GIE                     (abs)       005F
_INTCONbits              (abs)       000B
_RB0                     (abs)       0030
_RB4                     (abs)       0034
_RB5                     (abs)       0035
_RBIE                    (abs)       005B
_RBIF                    (abs)       0058
_TRISB                   (abs)       0086
__Habs1                  abs1        0000
__Hbank0                 bank0       0000
__Hbank1                 bank1       0000
__HbssBANK0              bssBANK0    0000
__Hcinit                 cinit       0010
__Hclrtext               clrtext     0000
__Hcode                  code        0000
__Hcommon                common      0000
__Hconfig                config      2008
__HcstackBANK0           cstackBANK0 0000
__Heeprom_data           eeprom_data 0000
__Hend_init              end_init    000C
__Hfunctab               functab     0000
__Hinit                  init        000B
__Hintentry              intentry    000B
__Hmaintext              maintext    0000
__Hpowerup               powerup     0000
__Hram                   ram         0000
__Hreset_vec             reset_vec   0001
__Hsfr0                  sfr0        0000
__Hsfr1                  sfr1        0000
__Hspace_0               (abs)       014B
__Hspace_1               (abs)       0012
__Hspace_2               (abs)       0000
__Hspace_3               (abs)       0000
__Hspace_4               (abs)       400F
__Hstack                 stack       0000
__Hstrings               strings     0000
__Htext                  text        0000
__Labs1                  abs1        0000
__Lbank0                 bank0       0000
__Lbank1                 bank1       0000
__LbssBANK0              bssBANK0    0000
__Lcinit                 cinit       000C
__Lclrtext               clrtext     0000
__Lcode                  code        0000
__Lcommon                common      0000
__Lconfig                config      0000
__LcstackBANK0           cstackBANK0 0000
__Leeprom_data           eeprom_data 0000
__Lend_init              end_init    000B
__Lfunctab               functab     0000
__Linit                  init        000B
__Lintentry              intentry    0004
__Lmaintext              maintext    0000
__Lpowerup               powerup     0000
__Lram                   ram         0000
__Lreset_vec             reset_vec   0000
__Lsfr0                  sfr0        0000
__Lsfr1                  sfr1        0000
__Lspace_0               (abs)       0000
__Lspace_1               (abs)       0000
__Lspace_2               (abs)       0000
__Lspace_3               (abs)       0000
__Lspace_4               (abs)       0000
__Lstack                 stack       0000
__Lstrings               strings     0000
__Ltext                  text        0000
__S0                     (abs)       014B
__S1                     (abs)       0012
__S2                     (abs)       0000
__S3                     (abs)       0000
___int_sp                stack       0000
___latbits               (abs)       0000
___sp                    stack       0000
___stackhi               (abs)       0000
___stacklo               (abs)       0000
__end_of__initialization cinit       000E
__end_of_main            maintext    0125
__end_of_myIntHandler    text1       014B
__initialization         cinit       000C
__pbssBANK0              bssBANK0    0011
__pcstackBANK0           cstackBANK0 000C
__pintentry              intentry    0004
__pmaintext              maintext    0010
__ptext1                 text1       0125
__size_of_main           (abs)       0000
__size_of_myIntHandler   (abs)       0000
_dutyControl             bssBANK0    0011
_main                    maintext    0010
_myIntHandler            text1       0125
btemp                    (abs)       004E
end_of_initialization    cinit       000E
interrupt_function       intentry    0004
intlevel0                functab     0000
intlevel1                functab     0000
intlevel2                functab     0000
intlevel3                functab     0000
intlevel4                functab     0000
intlevel5                functab     0000
reset_vec                reset_vec   0000
saved_w                  (abs)       004E
start                    init        000B
start_initialization     cinit       000C
wtemp0                   (abs)       004E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 18 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       2
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _myIntHandler *****************
 Defined at:
		line 47 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       3
      Totals:         0       3
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initialization		CODE           	000C	0000	3

shared estimated size: 3

main.c
		_main          		CODE           	0010	0000	278
		_myIntHandler  		CODE           	0125	0000	39

main.c estimated size: 317

