

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 23 21:08:08 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	idataCOMMON
   171  0060                     __pidataCOMMON:
   172                           
   173                           ;initializer for _counter
   174  0060  3401               	retlw	1
   175  000B                     _INTCONbits	set	11
   176  0011                     _TMR2	set	17
   177  0006                     _PORTB	set	6
   178  0092                     _TMR2ON	set	146
   179  0096                     _TOUTPS3	set	150
   180  0095                     _TOUTPS2	set	149
   181  0094                     _TOUTPS1	set	148
   182  0093                     _TOUTPS0	set	147
   183  0091                     _T2CKPS1	set	145
   184  0090                     _T2CKPS0	set	144
   185  0061                     _TMR2IF	set	97
   186  008C                     _PIE1bits	set	140
   187  0092                     _PR2	set	146
   188  0086                     _TRISB	set	134
   189                           
   190                           	psect	cinit
   191  000F                     start_initialization:	
   192                           ; #config settings
   193                           
   194  000F                     __initialization:
   195                           
   196                           ; Initialize objects allocated to COMMON
   197  000F  120A  118A  2060  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   198  0014  00F3               	movwf	__pdataCOMMON& (0+127)
   199  0015                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  0015                     __end_of__initialization:
   203  0015  0183               	clrf	3
   204  0016  120A  118A  2851   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	dataCOMMON
   207  0073                     __pdataCOMMON:
   208  0073                     _counter:
   209  0073                     	ds	1
   210                           
   211                           	psect	cstackCOMMON
   212  0070                     __pcstackCOMMON:
   213  0070                     ?_setTimer:
   214  0070                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_myInterruptHandler:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ??_myInterruptHandler:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225  0070                     	ds	3
   226  0073                     ??_setTimer:
   227  0073                     ??_main:	
   228                           ; 1 bytes @ 0x3
   229                           
   230                           
   231                           	psect	maintext
   232  0051                     __pmaintext:	
   233                           ; 1 bytes @ 0x3
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 51 in file "main.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, pclath, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : B00/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   253 ;;      Params:         0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0
   256 ;;      Totals:         0       0       0       0       0
   257 ;;Total ram usage:        0 bytes
   258 ;; Hardware stack levels required when called:    2
   259 ;; This function calls:
   260 ;;		_setTimer
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           
   267                           ;psect for function _main
   268  0051                     _main:
   269  0051                     l650:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272                           
   273                           
   274                           ;main.c: 53:     TRISB = 0;
   275  0051  1683               	bsf	3,5	;RP0=1, select bank1
   276  0052  1303               	bcf	3,6	;RP1=0, select bank1
   277  0053  0186               	clrf	6	;volatile
   278                           
   279                           ;main.c: 54:     PORTB = 0;
   280  0054  1283               	bcf	3,5	;RP0=0, select bank0
   281  0055  1303               	bcf	3,6	;RP1=0, select bank0
   282  0056  0186               	clrf	6	;volatile
   283  0057                     l652:
   284                           
   285                           ;main.c: 56:     setTimer();
   286  0057  120A  118A  203B  120A  118A  	fcall	_setTimer
   287  005C                     l37:	
   288                           ;main.c: 58:     while (1)
   289                           
   290  005C                     l38:	
   291                           ;main.c: 59:     {;main.c: 61:     }
   292                           
   293  005C  285C               	goto	l37
   294  005D  120A  118A  280C   	ljmp	start
   295  0060                     __end_of_main:
   296                           
   297                           	psect	text1
   298  003B                     __ptext1:	
   299 ;; *************** function _setTimer *****************
   300 ;; Defined at:
   301 ;;		line 85 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    1
   322 ;; This function calls:
   323 ;;		Nothing
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _setTimer
   331  003B                     _setTimer:
   332  003B                     l642:	
   333                           ;incstack = 0
   334                           ; Regs used in _setTimer: [wreg+status,2]
   335                           
   336                           
   337                           ;main.c: 87:     INTCONbits.GIE = 1;
   338  003B  178B               	bsf	11,7	;volatile
   339                           
   340                           ;main.c: 88:     INTCONbits.PEIE = 1;
   341  003C  170B               	bsf	11,6	;volatile
   342                           
   343                           ;main.c: 89:     PIE1bits.TMR2IE = 1;
   344  003D  1683               	bsf	3,5	;RP0=1, select bank1
   345  003E  1303               	bcf	3,6	;RP1=0, select bank1
   346  003F  148C               	bsf	12,1	;volatile
   347                           
   348                           ;main.c: 92:     T2CKPS0 = 1;
   349  0040  1283               	bcf	3,5	;RP0=0, select bank0
   350  0041  1303               	bcf	3,6	;RP1=0, select bank0
   351  0042  1412               	bsf	18,0	;volatile
   352                           
   353                           ;main.c: 93:     T2CKPS1 = 1;
   354  0043  1492               	bsf	18,1	;volatile
   355                           
   356                           ;main.c: 96:     TOUTPS0 = 1;
   357  0044  1592               	bsf	18,3	;volatile
   358                           
   359                           ;main.c: 97:     TOUTPS1 = 1;
   360  0045  1612               	bsf	18,4	;volatile
   361                           
   362                           ;main.c: 98:     TOUTPS2 = 1;
   363  0046  1692               	bsf	18,5	;volatile
   364                           
   365                           ;main.c: 99:     TOUTPS3 = 1;
   366  0047  1712               	bsf	18,6	;volatile
   367  0048                     l644:
   368                           
   369                           ;main.c: 101:     TMR2 = 0;
   370  0048  0191               	clrf	17	;volatile
   371  0049                     l646:
   372                           
   373                           ;main.c: 102:     PR2 = 255;
   374  0049  30FF               	movlw	255
   375  004A  1683               	bsf	3,5	;RP0=1, select bank1
   376  004B  1303               	bcf	3,6	;RP1=0, select bank1
   377  004C  0092               	movwf	18	;volatile
   378  004D                     l648:
   379                           
   380                           ;main.c: 104:     TMR2ON = 1;
   381  004D  1283               	bcf	3,5	;RP0=0, select bank0
   382  004E  1303               	bcf	3,6	;RP1=0, select bank0
   383  004F  1512               	bsf	18,2	;volatile
   384  0050                     l50:
   385  0050  0008               	return
   386  0051                     __end_of_setTimer:
   387                           
   388                           	psect	text2
   389  0019                     __ptext2:	
   390 ;; *************** function _myInterruptHandler *****************
   391 ;; Defined at:
   392 ;;		line 68 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          3       0       0       0       0
   409 ;;      Totals:         3       0       0       0       0
   410 ;;Total ram usage:        3 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		Interrupt level 1
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _myInterruptHandler
   421  0019                     _myInterruptHandler:
   422  0019                     i1l654:
   423                           
   424                           ;main.c: 70:     if (TMR2IF)
   425  0019  1283               	bcf	3,5	;RP0=0, select bank0
   426  001A  1303               	bcf	3,6	;RP1=0, select bank0
   427  001B  1C8C               	btfss	12,1	;volatile
   428  001C  281E               	goto	u1_21
   429  001D  281F               	goto	u1_20
   430  001E                     u1_21:
   431  001E  2834               	goto	i1l47
   432  001F                     u1_20:
   433  001F                     i1l656:
   434                           
   435                           ;main.c: 71:     {;main.c: 72:         counter++;
   436  001F  3001               	movlw	1
   437  0020  00F0               	movwf	??_myInterruptHandler
   438  0021  0870               	movf	??_myInterruptHandler,w
   439  0022  07F3               	addwf	_counter,f
   440                           
   441                           ;main.c: 73:         if (counter == 10)
   442  0023  300A               	movlw	10
   443  0024  0673               	xorwf	_counter,w
   444  0025  1D03               	btfss	3,2
   445  0026  2828               	goto	u2_21
   446  0027  2829               	goto	u2_20
   447  0028                     u2_21:
   448  0028  282E               	goto	i1l662
   449  0029                     u2_20:
   450  0029                     i1l658:
   451                           
   452                           ;main.c: 74:         {;main.c: 75:             counter = 0;
   453  0029  01F3               	clrf	_counter
   454  002A                     i1l660:
   455                           
   456                           ;main.c: 76:             PORTB ^= 0x01;
   457  002A  3001               	movlw	1
   458  002B  00F0               	movwf	??_myInterruptHandler
   459  002C  0870               	movf	??_myInterruptHandler,w
   460  002D  0686               	xorwf	6,f	;volatile
   461  002E                     i1l662:
   462                           
   463                           ;main.c: 79:         TMR2IF = 0;
   464  002E  108C               	bcf	12,1	;volatile
   465  002F                     i1l664:
   466                           
   467                           ;main.c: 80:         TMR2 = 0;
   468  002F  0191               	clrf	17	;volatile
   469  0030                     i1l666:
   470                           
   471                           ;main.c: 81:         PR2 = 255;
   472  0030  30FF               	movlw	255
   473  0031  1683               	bsf	3,5	;RP0=1, select bank1
   474  0032  1303               	bcf	3,6	;RP1=0, select bank1
   475  0033  0092               	movwf	18	;volatile
   476  0034                     i1l47:
   477  0034  0872               	movf	??_myInterruptHandler+2,w
   478  0035  008A               	movwf	10
   479  0036  0E71               	swapf	(??_myInterruptHandler+1)^(0+4294967168),w
   480  0037  0083               	movwf	3
   481  0038  0EFE               	swapf	btemp,f
   482  0039  0E7E               	swapf	btemp,w
   483  003A  0009               	retfie
   484  003B                     __end_of_myInterruptHandler:
   485  007E                     btemp	set	126	;btemp
   486  007E                     wtemp0	set	126
   487                           
   488                           	psect	intentry
   489  0004                     __pintentry:	
   490                           ;incstack = 0
   491                           ; Regs used in _myInterruptHandler: [wreg+status,2+status,0]
   492                           
   493  0004                     interrupt_function:
   494  007E                     saved_w	set	btemp
   495  0004  00FE               	movwf	btemp
   496  0005  0E03               	swapf	3,w
   497  0006  00F1               	movwf	??_myInterruptHandler+1
   498  0007  080A               	movf	10,w
   499  0008  00F2               	movwf	??_myInterruptHandler+2
   500  0009  120A  118A  2819   	ljmp	_myInterruptHandler
   501                           
   502                           	psect	config
   503                           
   504                           ;Config register CONFIG @ 0x2007
   505                           ;	Oscillator Selection bits
   506                           ;	FOSC = XT, XT oscillator
   507                           ;	Watchdog Timer Enable bit
   508                           ;	WDTE = OFF, WDT disabled
   509                           ;	Power-up Timer Enable bit
   510                           ;	PWRTE = OFF, PWRT disabled
   511                           ;	Brown-out Reset Enable bit
   512                           ;	BOREN = OFF, BOR disabled
   513                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   514                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   515                           ;	Data EEPROM Memory Code Protection bit
   516                           ;	CPD = OFF, Data EEPROM code protection off
   517                           ;	Flash Program Memory Write Enable bits
   518                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   519                           ;	In-Circuit Debugger Mode bit
   520                           ;	DEBUG = 0x1, unprogrammed default
   521                           ;	Flash Program Memory Code Protection bit
   522                           ;	CP = OFF, Code protection off
   523  2007                     	org	8199
   524  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myInterruptHandler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterruptHandler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myInterruptHandler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterruptHandler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _setTimer
 ---------------------------------------------------------------------------------
 (1) _setTimer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myInterruptHandler                                   3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setTimer

 _myInterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       4      12        0.0%
ABS                  0      0       4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 23 21:08:08 2020

                         l50 0050                           l37 005C                           l38 005C  
                        l642 003B                          l650 0051                          l644 0048  
                        l652 0057                          l646 0049                          l648 004D  
                        _PR2 0092                         i1l47 0034                         _TMR2 0011  
                       u1_20 001F                         u1_21 001E                         u2_20 0029  
                       u2_21 0028                         _main 0051                         btemp 007E  
                       start 000C                        ?_main 0070                        i1l660 002A  
                      i1l662 002E                        i1l654 0019                        i1l664 002F  
                      i1l656 001F                        i1l666 0030                        i1l658 0029  
                      _PORTB 0006                        _TRISB 0086                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 000F  
               __end_of_main 0060                       ??_main 0073                       _TMR2IF 0061  
                     _TMR2ON 0092   __end_of_myInterruptHandler 003B             __end_of_setTimer 0051  
               __pdataCOMMON 0073                       saved_w 007E      __end_of__initialization 0015  
             __pcstackCOMMON 0070                   __pmaintext 0051                   __pintentry 0004  
                    _T2CKPS0 0090                      _T2CKPS1 0091                      _TOUTPS0 0093  
                    _TOUTPS1 0094                      _TOUTPS2 0095                      _TOUTPS3 0096  
                  ?_setTimer 0070                      __ptext1 003B                      __ptext2 0019  
                    _counter 0073         end_of_initialization 0015                   ??_setTimer 0073  
         _myInterruptHandler 0019          ?_myInterruptHandler 0070                __pidataCOMMON 0060  
       ??_myInterruptHandler 0070          start_initialization 000F                    ___latbits 0002  
          __size_of_setTimer 0016            interrupt_function 0004                     _PIE1bits 008C  
              __size_of_main 000F                     _setTimer 003B  __size_of_myInterruptHandler 0022  
                 _INTCONbits 000B                     intlevel1 0000  
